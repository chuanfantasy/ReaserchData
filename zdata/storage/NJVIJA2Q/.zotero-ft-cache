电 子 科 技 大 学
UNIVERSITY OF ELECTRONIC SCIENCE AND TECHNOLOGY OF CHINA
硕士学位论文
MASTER THESIS

论文题目 基于数字孪生的机床加工过程虚拟监控系统
研究与实现

学科专业

学

号

作者姓名

指导教师

机械工程 201721080104
李小龙 杜丽 教授

分类号

密级



  

Ｕ

Ｄ

Ｃ

注


１

  

学 位 论 文

基于数 字孪生 的 机床加 工过程虚拟 监控 系统研究 与 实现  
（ 题 名 和 副 题 名 ）

李小 龙  

作 者姓 （

名 ）

指导老 师

杜丽 教授



  

电子科技大学 成都



  

姓 称 单位 称 （

名、 职

、

名

）

申 请学 位级别硕 士学科专业

机械工程



  

＾ 提交 论文 日 期 ２ Ｐ ２． ０

ｑ ｉ ｉ ｉ

ｌ

论文答辩 日 期  

学位授予 单位和 日 期电子 科技大 学２０ ２ ０ 年 ６ 月

答辩委员 会主席
  
评阅人
  

注 １：

注 明 《 国 际十进 分类法 ＵＤＣ 》

类 号 的

。

Ｒ Ｖ Ｍ ｅ ｓｅ ａ ｒｃ ｈ ａｎ ｄ Ｉ ｍｐ ｌｅ ｍ ｅ ｎｔ ａｔｉ ｏｎ ｏ ｆ ｉ ｒｔｕ ａｌ

ｏ ｎ ｉｔｏ ｒｉ ｎ ｇ  

Ｍ Ｔ Ｂ Ｄ Ｓｙ ｓｔ ｅ ｍｆｏ ｒ

Ｐ ａ ｃ ｈ ｉｎ ｅ ｏ ｏｌ ｓ ｒ ｏ ｃ ｅ ｓ ｓ

ａ ｓ ｅ ｄ ｏｎ 

ｉｇ ｉｔ ａｌ

Ｔｗｉｎ  

Ａ Ｍ 

Ｔ ａｓ ｔｅ ｒ ｈ ｅ ｓ ｉ ｓ Ｓ ｕｂ ｍｉ ｔｔｅ ｄ ｔｏ

Ｕ Ｅ Ｃ Ｔ ｎｉ

ｖｅｒｓ

ｙ ｉｔ 

ｏ

ｆ

ｌ ｅ ｃ ｔｒｏ ｎｉ ｃ Ｓ ｃ ｉ ｅｎ ｃ ｅ ａｎ ｄ 

ｅ

ｃ

ｈ

ｎ

ｏ

ｌ

ｏ

ｇｙ

ｏ


ｆ



ｈ ｉｎａ

Ｄ Ｍ Ｅ ｐ ｎ ｃ ｅ ｉ ｓ ｉ ｌ ｉ

：

ｅ ｃ ｈ ａ ｎｉ ｃ ａ ｌ ｎ ｇ ｉｎ ｅ ｅ ｒｉ ｎ ｇ

Ａ Ｘ Ｌ ｕｔｈ ｏｒ ：

ｉ ａｏ ｌ ｏ ｎ ｇ

ｉ

 Ｌ Ｄ Ｓ ｕｐ ｅｒｖｉ ｓ ｏｒ ：

Ｐ ｒ ｏｆ． ｉ  ｕ  

 Ｍ Ｅ Ｅ Ｓ ｃｈ ｏ ｏ ｌ ：

Ｓ ｃ ｈ ｏ ｏｌ ｏ ｆ

ｅ ｃ ｈ ａ ｎ ｉ ｃ ａｌ ａ ｎ ｄ ｌ ｅ ｃ ｔｒ ｉ ｃ ａｌ  ｎ ｇｉ ｎ ｅ ｅ ｒｉ ｎ ｇ

独创性声明

本人声明所呈交的学位论文是本人在导师指导下进行的研究工作 及取得的研究成果。据我所知，除了文中特别加以标注和致谢的地方外， 论文中不包含其他人已经发表或撰写过的研究成果，也不包含为获得 电子科技大学或其它教育机构的学位或证书而使用过的材料。与我一 同工作的同志对本研究所做的任何贡献均已在论文中作了明确的说明 并表示谢意。

作者签名：

日期： 年 月 日

论文使用授权

本学位论文作者完全了解电子科技大学有关保留、使用学位论文 的规定，有权保留并向国家有关部门或机构送交论文的复印件和磁盘， 允许论文被查阅和借阅。本人授权电子科技大学可以将学位论文的全 部或部分内容编入有关数据库进行检索，可以采用影印、缩印或扫描等 复制手段保存、汇编学位论文。
（保密的学位论文在解密后应遵守此规定）

作者签名：

导师签名： 日期：

年 月 日

摘要
摘 要
随着传统制造业与互联网信息技术的逐渐融合，传统制造向智能制造转变。智 能制造的基础是物理空间与数字空间的互联互通，而数字孪生是实现物理空间与 数字空间融合最佳途径。本文基于数控机床的数字孪生，研究了机床加工过程多源 异构数据的可视化监控技术、机床数字孪生物理规则的融合方法，最终开发了基于 数字孪生的机床加工过程虚拟监控系统。本文的主要研究内容如下：
（1）虚拟监控系统的整体设计：提出系统设计目标、原则、开发流程；对虚 拟监控系统的问题进行分析，得出虚拟监控系统核心目标是提升机床数字孪生几 何层面映射和物理层面映射的性能，进而实现基于数字孪生的虚拟监控；设计包含 五个需求模块的虚拟监控系统结构及五层结构的虚拟监控系统网络架构。
（2）基于多源异构数据的机床可视化监控设计与实现：分析并采集机床加工 过程的多源异构数据，设计并实现基于 Json 的数据集成；设计并实现基于 Redis 和 RabbitMQ 的虚拟监控系统数据异步传输方法，开发设备数据管理平台，测试显示 异步传输方法相比普通方法的读写性能提升 5.4 倍，吞吐量提升 1.64 倍；设计并 实现 C#、Python 的混合编程，并对机床运行数据的处理进行分析；研究并实现数 据的可视化映射与显示性能优化，基于 Unity3D 开发可视化组件，使用场景剔除技 术优化系统的显示性能。
（3）基于深度学习的机床数字孪生模型物理仿真研究：对于数字孪生物理层 面的映射，研究基于仿真数据回归计算建模的物理规则抽象和基于深度学习的物 理规则封装；研究并实现仿真工况数据和仿真结果数据的图像化处理，基于 cGAN 建立回归计算模型，并基于 TensorFlow 做实现；以 VMC0656e 机床为对象，实现 主轴系统瞬态热力学物理规则的融合，测试显示本文方法相比有限元软件求解在 较小误差下，求解时间、计算产生的数据规模上有显著降低。
（4）虚拟监控系统的集成测试：阐述虚拟监控系统的开发环境，设计系统的 运行流程、界面；对虚拟监控系统客户端进行测试，测试显示系统的硬件资源占用 率低、显示性能良好；以 VMC0656e 机床为对象，进行虚拟监控系统实例测试， 实验表明虚拟监控系统的实时性好、生成结果误差小。
关键词：机床，数字孪生，可视化监控，深度学习
I

ABSTRACT
ABSTRACT
With the gradual integration of traditional manufacturing and Internet information technology, traditional manufacturing has shifted to intelligent manufacturing. The basis of intelligent manufacturing is the interconnection of physical space and digital space, and digital twin is the best way to achieve the integration of physical space and digital space. Based on the digital twin of CNC machine tools, this paper studies the visual monitoring technology of multi-source heterogeneous data in the machining process and the fusion method of the physical rules of digital twin, and finally implements a virtual monitoring system for the machining process of machine tools based on digital twin. The main research contents of this article are as follows:
(1) The overall design of the virtual monitoring system: Put forward the system design goals, principles, and development process; analyze the problems of the virtual monitoring system, and conclude that the core goal of the virtual monitoring system is to improve the performance of the geometric level mapping and physical level mapping of the digital twin, and then realize virtual monitoring based on digital twin. Design a virtual monitoring system structure including five demand modules, and a five-layer structure of the virtual monitoring system network architecture.
(2) Design and implementation of machine tool visual monitoring based on multisource heterogeneous data: Analyze and collect multi-source heterogeneous data of machine tool processing, design and implement data integration based on Json; design and implement asynchronous data transmission method based on Redis and RabbitMQ, develop a device data management cloud platform.The results show that the asynchronous transmission method improves the reading and writing performance by 5.4 times and the throughput by 1.64 times. Design and implement mixed programming of C # and Python, and analyze the processing of machine tool operating data. Research and implementation of data visualization mapping and display performance optimization, develop visualization components based on Unity3D, and use scene elimination technology to optimize the display performance of the system.
(3) Research on the physical simulation of the digital twin model of machine tools based on deep learning: In the mapping of the physical level of digital twin, research on physical rule abstraction based on simulation data regression calculation modeling and
II

ABSTRACT
physical rule packaging based on deep learning. Research and realize the image processing of simulation working condition data and simulation result data, establish a regression calculation model based on cGAN, and implement based on TensorFlow. The VMC0656e machine tool is used as the object to realize the fusion of the transient thermodynamics and physical rules of the spindle system. With small errors, the solution time and the scale of the data generated by the calculation are significantly reduced.
(4) Integration test of virtual monitoring system: Explain the development environment of virtual monitoring system, design the operating process and interface of the system; Test the virtual monitoring system client, the results shows that the system has low hardware resource occupancy rate and good display performance; The VMC0656e machine tool is used as an example to test the virtual monitoring system. The experiment shows that the virtual monitoring system has good real-time performance and small error in the generated results. Keywords: CNC machine tools, digital twin, visual monitoring, deep learning
III

目录
目 录
第一章 绪论 .................................................................................................................... 1 1.1 本文研究的背景与意义 .................................................................................... 1 1.2 国内外研究现状 ................................................................................................ 2 1.2.1 设备数字孪生技术研究现状 .................................................................. 2 1.2.2 多源异构数据可视化技术研究现状 ...................................................... 4 1.2.3 有限元仿真计算加速技术研究现状 ...................................................... 5 1.3 论文研究的主要内容 ........................................................................................ 7 1.3.1 课题来源 .................................................................................................. 7 1.3.2 主要研究内容 .......................................................................................... 7
第二章 机床加工过程虚拟监控系统总体设计 ............................................................ 9 2.1 系统设计原则与目标 ........................................................................................ 9 2.1.1 系统设计目标 .......................................................................................... 9 2.1.2 系统设计原则 .......................................................................................... 9 2.1.3 系统开发流程 ........................................................................................ 10 2.2 基于数字孪生的机床加工过程虚拟监控系统的问题分析 ...........................11 2.2.1 机床数字孪生的数据映射的问题分析 .................................................11 2.2.2 机床数字孪生的物理规则映射的问题分析 ........................................ 12 2.3 虚拟监控系统设计 .......................................................................................... 13 2.3.1 系统设计需求 ........................................................................................ 13 2.3.2 虚拟监控系统网络架构设计 ................................................................ 14 2.4 本章小结 .......................................................................................................... 16
第三章 基于多源异构数据的机床可视化监控设计与实现 ...................................... 17 3.1 机床加工过程多源异构数据分析与采集 ....................................................... 17 3.1.1 机床加工过程数据分析 ......................................................................... 17 3.1.2 机床加工过程数据采集设计 ................................................................. 18 3.1.3 数据采集技术 ......................................................................................... 19 3.2 机床加工过程多源异构数据集成 .................................................................. 22 3.2.1 机床加工过多源异构数据统一表达 .................................................... 22 3.2.2 基于 Json 的多源异构数据集成算法 ................................................... 24
IV

目录
3.3 加工过程数据的异步传输 .............................................................................. 26 3.3.1 基于缓存和消息队列的数据异步传输 ................................................ 26 3.3.2 Redis 缓存数据更新策略 ....................................................................... 29 3.3.3 基于 Springboot 设备数据管理平台的实现 ........................................ 30 3.3.4 性能测试与对比 .................................................................................... 32
3.4 加工过程实时数据处理 .................................................................................. 33 3.4.1 C#、Python 混合编程技术与实现 ........................................................ 33 3.4.2 机床运行数据处理方法 ........................................................................ 35
3.5 数据可视化映射方法与实现 .......................................................................... 37 3.5.1 基于 Unity3D 可视化映射方法与实现 ................................................ 37 3.5.2 可视化性能的优化 ................................................................................ 40
3.6 本章小结 .......................................................................................................... 41 第四章 基于深度学习的机床数字孪生模型物理仿真研究 ...................................... 42
4.1 数字孪生模型物理规则融合方法 .................................................................. 42 4.1.1 基于仿真数据回归计算建模的物理规则抽象 .................................... 42 4.1.2 基于深度学习的物理规则封装 ............................................................ 43
4.2 数据的图像化处理技术 .................................................................................. 44 4.2.1 有限元仿真数据的分析 ........................................................................ 44 4.2.2 多通道图像的原理 ................................................................................ 46 4.2.3 基于 OpenCV 的数据处理 .................................................................... 47
4.3 仿真数据回归计算模型 .................................................................................. 50 4.3.1 回归计算模型的建立 ............................................................................ 50 4.3.2 对 cGAN 的调整.................................................................................... 54 4.3.3 基于 TensorFlow 的实现 ....................................................................... 55
4.4 VMC0656e 机床主轴系统瞬态热力学规则融合的实现 ............................... 55 4.4.1 机床主轴系统有限元仿真 .................................................................... 56 4.4.2 数据集的处理 ........................................................................................ 60 4.4.3 回归计算模型的训练 ............................................................................ 61 4.4.4 求解性能对比 ........................................................................................ 63
4.5 本章小结 .......................................................................................................... 64 第五章 虚拟监控系统集成及测试 .............................................................................. 65
5.1 虚拟监控系统集成 .......................................................................................... 65 5.1.1 虚拟监控系统开发环境 ........................................................................ 65
V

目录
5.1.2 虚拟监控系统运行流程 ........................................................................ 66 5.1.3 虚拟监控系统用户界面开发 ................................................................ 67 5.2 虚拟监控系统客户端测试 .............................................................................. 68 5.2.1 虚拟监控系统客户端整体性能测试 .................................................... 68 5.2.2 虚拟监控系统客户端显示性能测试 .................................................... 69 5.3 VMC0656e 机床虚拟监控系统实例 ............................................................... 70 5.3.1 运行环境搭建 ........................................................................................ 70 5.3.2 系统实例运行与分析 ............................................................................ 71 5.4 本章小结 .......................................................................................................... 73 第六章 总结与展望 ...................................................................................................... 74 6.1 总结 .................................................................................................................. 74 6.2 展望 .................................................................................................................. 74 致谢 ................................................................................................................................ 76 参考文献 ........................................................................................................................ 77 攻读硕士期间取得的成果 ............................................................................................ 81
VI

第一章 绪论
第一章 绪论
1.1 本文研究的背景与意义
随着飞速发展的信息技术与传统制造业的全面融合，世界各国纷纷出台了各 自的先进制造发展战略，如中国智能制造 2025、美国工业互联网与再工业化、德 国工业 4.0。借助新一代信息技术，实现制造的物理世界和信息世界的互联互通、 智能化操作，进而实现智能制造[1]。智能制造技术是与网络通信技术、自动化技术、 传感技术、信息处理技术以及人工智能技术深度融合，通过信息感知、人机交互、 决策分析、执行反馈，实现车间、生产线的设计、管理、服务的智能化和工业产品 的设计、制造、维保。在智能制造系统中，利用新一代信息技术集成工厂、产线的 设备资源，实现制造系统的信息感知、网络通信和数据集成；以制造过程数据的分 析为基础，实现制造过程的性能优化分析、自主决策、高性能监控、高效排程调度、 设备智能维保等智能化服务[2,3]。
相比于传统的制造系统，智能制造系统具有以下五方面的优势：自主决策能力、 人机交互性能、自主学习能力、自组织与超柔性、多维度视觉交互能力。智能制造 的核心问题是实现物理空间和数字空间的融合，构建信息物理系统是一种重要解 决方法[4]。信息物理系统是物理世界和信息世界高度融合的系统，具有虚实映射、 数据驱动、系统自治等特征[5]。其中，虚实映射是指通过构建数字虚体与物理实体 映射关系，将物理空间中的物理实体映射到数字空间中，形成具有数据映射、分析 决策、控制执行功能的数字孪生[6]。
机床是加工制造过程的关键设备[7]，通过对机床的数字孪生研究，在几何行为 层面和物理规则层面对机床在数字空间中进行多维度映射，构建机床多维度的数 字孪生，从而能够监控、模拟真实机床在加工过程的行为和状态，将机床复杂的加 工过程高效的反馈给操作人员，进而实现人员、机床、机床的数字孪生之间的协作 制造。
在几何行为层面的物理空间到数字空间的映射中，机床加工过程中的状态随 着加工过程的进行而时刻改变，反映机床状态的数据存在多源性、异构性，数据的 高效信息传递是核心问题，而数据可视化是解决问题的有效途径。借助数字孪生， 将机床加工过程中的多源异构数据以数据可视化的方式传递给操作人员，可以高 效的反映机床的加工状态。在多源异构数据的可视化过程中，通过对数据的采集、 集成、传输、处理、可视化映射，不仅为基于数据的加工分析、优化、维保提供了
1

电子科技大学硕士学位论文
基础，而且能在远程、多终端实时监控机床加工过程中的状态，减少人力工作强度， 提高加工的效率。
在物理规则层面的物理空间到数字空间的映射中，机床加工过程涉及到力、热 等物理规则，机床的物理状态是工况条件根据这些物理规则产生的，利用机床的物 理规则高效反映机床物理状态是核心问题，而基于数字孪生的物理规则融合是解 决问题的有效方法。基于数字孪生的物理规则融合，利用机床的数字孪生实现机床 物理状态的仿真，促进人员、机床、机床数字孪生之间的协作。借助数字孪生模拟 出机床在工况下的物理状态，一方面不需要实际的测量操作，能够提高数控机床的 加工效率和经济性；另一方面，通过对工况的模拟，仿真出机床的状态参数，加工 前能够验证工况、加工中能近实时监控测量困难位置的物理状态，提升加工的经济 性和安全性。
基于数字孪生的虚拟监控系统，一方面有较强的视觉效果，能很好地呈现数据； 另一方面，借助数字孪生模型，不仅在几何层面对机床做数字化描述，而且在物理 层面对机床的物理规则做融合，极大增强虚拟监控系统的功能和效果。对于机床加 工过程中多源异构数据的可视化，研究机床从物理空间到数字空间映射中的多源 异构数据的集成算法、数据传输、数据处理、可视化映射，以提高数据的访问、呈 现性能。通过对数字孪生的物理规则融合的分析，研究基于有限元仿真数据回归计 算的规则抽象，利用深度学习模型对物理规则进行封装，并基于数字孪生模型呈现 相应的计算结果，提升虚拟监控系统的功能和效果。机床的几何、物理层面的多维 度映射是机床数字孪生的内涵，也是实现加工过程智能化的不可或缺的组成部分。 机床是制造业的关键设备，开发基于数字孪生的机床加工过程虚拟监控系统对加 工过程的高效性、安全性、经济性有积极作用，对于传统制造业向智能制造转变具 有重要的积极作用。
1.2 国内外研究现状
1.2.1 设备数字孪生技术研究现状
数字孪生的概念最早于 2002 年被 Grieves 教授提出[8]，后来美国国家航天局 （NASA）将数字孪生概念应用在阿波罗计划中的飞行器上。2011 年，美国空军实 验室利用数字孪生的概念来解决飞行器生命周期管理的问题[9]。通用电气公司 GE 针对设备的监控和维护开发了设备的数字孪生体，已开发出了大量的数字孪生体， 并进行了工业应用[10]。西门子将数字孪生概念应用于计算机辅助制造系统、自动 化设备中，如西门子数控系统的虚拟调试[11]。
2

第一章 绪论
在国内的相关研究中，王春晓研究了数控机床数字孪生的多领域建模和虚拟 调试关键技术，建立了数控机床的电气系统和控制系统的 Modelica 模型以及数控 机床加工中工件及材料去除的 Modelica 模型，并基于此开发了数控机床虚拟调试 系统，实现了基于数字孪生的数控机床虚拟调试[12]。李宝超研究了基于数字孪生 的检测设备的优化设计，采用了包含信息模型、数学模型、三维模型的方案构建设 备的数字孪生，研究了物理设备与数字孪生模型数据通信的方法，并基于设备数字 孪生与运维数据研究了整体多目标优化中解耦方法[13]。王俊峰等人研究了基于数 字孪生的飞机机翼制孔的三维监控，通过实时获取制孔过程的数据，动态、多维度 的展示了真实飞机机翼制孔过程[14]。郑宇等人研究了焊接设备的数字孪生模型框 架，基于 OPCUA、Socketde 的数据采集，信息预处理以及数据实时映射，实现了 对焊接设备的实时监控[15]。罗伟超等人对数控机床的数字孪生的建模方法做了研 究，提出了包含数描述模型、映射模型、智能模型三个维度的数控机床数字孪生框 架[16]。何柳江研究了机床交互系统，实现了物理空间的数控机床与数字空间的机 床数字孪生之间双向映射，对基于 OpenGL 可编程管线技术、基于数字孪生模型的 远程控制技术进行了深入研究[17]。
在国外的相关研究中，Eric J. Tuegel 等人基于数字孪生研究了飞行器结构寿命 预测的问题，提出了飞行器结构寿命预测的数字孪生模型，利用单个飞行器的精细 模型来整合结构偏转和温度的计算，从而分析局部损坏和材料状态演变[18]。Michael Grieves 等人针对复杂系统提出了使用数字孪生减少系统不可预测、紧急的行为的 方法[19]。Glaessgen E 等人提出基于数字孪生建立飞行器高保真模型，结合飞行器 历史数据，实现健康管理，提升安全水平和可靠性[20]。Arquimedes Canedo 针对物 联网运营阶段包括物联网设备在运行期间表现、操作、通信和与其他物联网设备交 互的生命周期，提出了通过采用数字孪生技术管理大规模工业物联网、优化工业物 联网的方法[21]。Thomas H.-J. Uhlemanna 等人借助设备的数字孪生研究制造过程的 计划方法，并提出了一种多模式数据采集方法[22]。Torben Cichon 等人提出了包含 结构、功能等内容的数字孪生模型，并开发了可嵌入的数字孪生平台，提升了人机 交互的性能[23]。Dmitry Kostenko 等人研究了设备数字孪生在静态和动态诊断中的 应用，提出了基于知识库的诊断方法[24]。Petr Janda 研究了重型机床的数字孪生虚 拟模型的开发，使用 Sinumerik 8400 控制系统在 Siemens NX 环境中实现了虚拟模 型的开发，用来测试设备的参数[25]。
当前数字孪生技术成了研究热点，国内外研究者对设备数字孪生的应用、框架 结构做了深入的研究。但是对于单个设备工作全周期的数字孪生的研究并不充分， 大多数研究着重在几何层面，在物理层面的研究较少，缺乏对过程中多源异构数据
3

电子科技大学硕士学位论文
映射以及设备物理规则映射的相关研究。在数据映射方面，大多数研究着重在几何 模型上的数据驱动，缺乏对状态数据映射中的数据传输、数据处理、可视化映射等 技术的研究。在物理规则方面，对数字孪生物理规则的融合的研究较少，部分研究 着重在电气方面，对过程中的物理状态的研究比较缺乏，对于数字孪生中物理规则 的计算速度、结果显示的研究也比较缺乏。
1.2.2 多源异构数据可视化技术研究现状
数控加工过程中，机床状态数据的源自数控系统、传感器、采集卡等，加工过 程中的数据也包含结构数据、非结构数据等不同的数据结构。在机床加工过程的监 控中，加工过程状态数据的可视化是监控系统在交互呈现方面的核心内容。在计算 机领域，数据可视化是对数据进行直观、形象的解释，包含数据分析、数据过滤、 可视化映射、显示呈现等过程，以得到具有更大价值的信息[26]。监控系统中数据可 视化是为了寻找数据中的规律、相关性、异常，用来记录信息、信息传播、协同等。 近些年来，随着大数据、云计算等技术的不断发展，数据可视化已经成为许多领域 传递信息的重要手段。
国内的研究中，潘婷婷基于大数据技术，针对多源异构数据利用 XML 进行集 成，实现了各类结构数据、半结构数据、非结构数据的集成，以及多源异构数据集 成系统的数据交互[27]。胡良等人提出了基于虚拟现实的机械设备工作过程多源 CAE 数据集成框架，对机械设备工作过程的多源 CAE 数据进行了分析，并提出了 PD-Tree 数据结构，利用脚本语言实现了数据的可视化，并利用虚拟现实技术达到 了沉浸感较强的交互效果[28]。傅云研究了针对多物理场异构网格的有限元分析结 果数据向模型几何特征映射的方法，实现了多物理场分析数据的耦合及其在虚拟 环境中的可视化集成[29]。方锡武等人针对多物理场异构有限元网格数据，提出了 等效集成的方法，首先确定异构有限元网格的主网格，将其它的物理场网格作为辅 助网格，然后利用等参逆变换的方法将辅助网格信息等效到主网格，最后在初始确 定的主网格中利用 RGB 颜色模式实现了集成数据的可视化呈现[30]。王琦针对结构 试验的多源异构数据，研究了数据的集成算法，以及数据的高并发存储方式、可检 索加密算法，并基于 Java Servlet 开发了数据分析与可视化云平台[31]。余海军等人 针对多源异构数据的管理问题，在对多源异构数据特征分析的基础上，利用元数据 存储技术实现了海量数据的统一存储和快速检索，以及利用高分辨率金字塔模型 提高数据的读取和可视化效率，研究并实现了海量多源异构数据的管理和存储方 法[32]。
4

第一章 绪论
国外的研究中，Iman Avazpour 等人提出了针对工程复杂数据的集成与协同、 数据查询与可视化的 Harmonizer 框架，通过分析系统架构和聚合级别以确定源数 据集到统一数据集的映射关系，根据映射关系和转换规则进行编程以实现对各源 数据集的处理，并对数据的操作和可视化进行了开发[33]。Jaenisch 等人提出了一种 基于空间投票（Spatial Voting，SV）的多源数据的信息融合和可视化框架，研究了 多源数据的转换和处理方法，以及基于 SV 的多源数据融合方法，并实现了多源数 据的可视化[34]。Benjamin 等人提出了利用协作信息和可视化进行知识发现的方法 和应用架构，通过使用协作分析方法提高感知能力，减少了从多源数据到生成决策 支持信息所需的时间[35]。I.A.Parfenova 等人研究了用于可视化的数据模型集成问 题，通过数据分离与模板方法，为用于不同可视化方法的模型动态分配数据，提升 了可视化的性能，实现了良好的可视化效果[36]。Alexey Bezgodov 等人研究了仿真 领域中交互式实时可视化问题，提出了用于多尺度问题可视化的快速图形应用开 发框架，并利用运动仿真和监控实例做了验证[37]。
当前国内外对于多源异构数据的可视化的研究，主要在海量数据的存储、数据 清洗方法以及可视化性能等方面。大多数研究者的工作中研究对象是数据集，对于 流式数据的相关问题研究比较少，在可视化流程中数据传输的研究比较缺乏。部分 研究者的在可视化部分借助开源二维可视化工具，对于虚拟监控系统，沉浸感不强。 当前国内外研究者对于可视化系统的实时性、流畅性以及并发性的研究比较缺乏， 对系统的时间延迟、并发性能方面的研究比较少。
1.2.3 有限元仿真计算加速技术研究现状
对于机床的数字孪生物理规则结果的计算，有限元仿真方法是一种可行、高效 的方法。对于数控机床的物理仿真，传统的有限元方法对数控机床模型的物理仿真 由于零部件多、接触繁杂等因素，求解问题的规模比较庞大，因而求解时间长、求 解过程中产生的数据量大。邓小雷等人对于某型号数控机床主轴热态特性的有限 元仿真中，求解 9000 秒的温度变化，计算时间超过 4 小时，结果数据占用存储空 间超过 200GB[38]。对于有限元仿真计算的结果文件的可视化，由于文件特别大， 需要使用专业的后处理软件处理，不能很好地与数字孪生虚拟监控系统集成。对于 基于数字孪生的机床虚拟监控系统，现有的有限元仿真软件在计算时间、数据存储 空间占用、结果呈现方面不能很好地满足监控系统的要求。
国内研究中，毛宽民等人基于有限元仿真软件 PATRAN 的实现了快速动力学 建模方法，通过对机床结合面的分析，利用 PATRAN 二次开发技术实现了机床结 构快速动力学建模系统，提高了基于有限元仿真的机床参数调优效率和精度控制
5

电子科技大学硕士学位论文
[39]。李晓等人研究了使用集群并行计算的方法加速计算过程，提出了一种高效的 镜像分解技术以并行化，通过合并计算过程的非冗余同步组件以减少通信开销[40]。 雷江等人针对计算流体力学（CFD），研究了使用 MUSCL 和 NND 方案将 Euler 求 解器从中央处理单元（CPU）移植到三个不同的 CPU /图形处理单元（GPU）异构 硬件平台的方法，研究了存储模型和编程方法，最后对一维和二维求解做了验证， 结果表明该方法有良好的加速性能[41]。黄劲等人对弹性物体的快速仿真技术进行 了研究，分析了加速的线性化、简化思想以及数值方法[42]。姚叶研究了基于深度学 习的加速计算方法，利用 Tecplot 对少量的有限元网格数据做图像化处理，将三维 数据转换成二维图像，再通过全卷积深度学习网络 VGG-19 模型建立仿真数据的 回归计算模型，最后对仿真计算的模拟计算做了实现，并对深度学习回归模型做了 评估，分析了训练过程的过拟合情况、结果的误差、以及模型的泛化能力[43]。
国外研究中，Naveed Raza 等人针对复杂形状对象的附加质量的仿真，提出了 利用不稳定模型、无粘性模型和动态网格技术进行瞬态仿真，通过在匀速运动和加 速运动的条件下求力的差，从而计算出物体的附加质量，通过对方法的改进提升了 计算的效率[44]。T. Brandvik 等人提出了使用 GPU 进行加速的方法，一般 GPU 的 浮点运算能力超过 CPU 的 10 倍，GPU 的核心数量也比 CPU 多，对于二维求解 GPU 的效率是 CPU 的 29 倍，三维求解是 CPU 的 16 倍[45]。J.C. Thibault 等人进一 步拓展 GPU 加速的研究，基于统一计算设备架构（Compute Unified Device Architecture，CUDA）研究了多 GPU 的加速方法，进一步提升了计算的速度[46]。 W.D. Smith 等人针对 CFD 仿真研究了基于 FPGA 的高性能可重构计算技术，在系 统级并行性和较低级硬件的并行性之间产生了协同作用，通过编写硬件描述语言 （HDL）代码解决可重配置的问题[47]。H. Morisita 等人进一步扩展了基于 FPGA 的 高性能重构计算（HPRC）方法，提出了多 FPGA 可重配置系统的模型，通过优化 操作顺序和结构，在两块板串行连接下，计算时间提升幅度超过 6 倍[48]。Diego Sanchez-Roman 等人更进一步提出了使用高级语言（HLL）以减少可重配置的开发 量和开发难度，解决了算法移植的问题，使得 HPRC 更加高效和便于使用[49]。
当前国内外对于仿真计算加速的方法主要有仿真计算过程的优化、使用 GPU 加速浮点运算、CPU 并行计算及分布式集群、基于 FPGA 重构计算等方法。对于 基于数字孪生的虚拟监控系统，对仿真的实时性有一定的要求，基于硬件的加速存 在计算效率不够、经济性不高的问题。基于数值的方法能够很好地满足虚拟监控系 统的需求，但当前国内外的相关研究不够充分。ANSYS 公司开发了 Twinbuilder 平 台，借助深度学习技术提升了 CFD 的计算速度。深度学习是当前国内外的研究热
6

第一章 绪论
点，尤其在图像处理方面，如图像分类、识别、风格迁移等，在有限元仿真方面的 应用研究比较少。
1.3 论文研究的主要内容
1.3.1 课题来源
本课题来源于国家科技重大专项课题“用于钛合金壁板、复合材料等典型零件 加 工 的 高 速 立 式 五 轴 数 控 机 床 研 制 及 自 动 化 生 产 示 范 线 应 用 ”， 编 号 2017ZX04002001。
1.3.2 主要研究内容
本文围绕制造过程智能化的需求，以实现机床虚拟监控为目标，通过对多源异 构数据集成、异步数据传输技术、数据可视化映射、数字孪生物理规则融合、图像 深度学习等关键技术的研究，实现了基于数字孪生的机床加工过程虚拟监控系统。
本文的主要研究内容概括如下： （1）分析课题背景与意义，以及设备数字孪生技术、多源异构数据可视化技 术、有限元仿真加速技术的国内外研究现状、本文的主要研究内容。通过对国内外 相关文献的调研，提出本文基于数字孪生的机床加工过程虚拟监控系统，实现加工 过程多源异构数据的可视化和机床数字孪生模型物理规则的融合。 （2）数控机床虚拟监控系统总体设计。确定系统的设计目标、原则与流程， 分析机床数字孪生的数据映射和物理规则映射的关键问题。确定虚拟监控系统的 框架结构，分析系统的设计需求，确定系统的功能模块，设计系统的网络架构。 （3）基于多源异构数据的机床可视化监控设计与实现。首先通过分析机床加 工过程多源异构数据，设计数据的统一表达，以及基于 Json 的多源异构数据集成 算法。基于 Redis 缓存和消息队列 RabbitMQ 实现加工过程数据的异步传输，开发 数据管理平台，并对数据传输性能进行对比测试。设计并实现 C#与 Python 混合编 程的方法，以及数据的处理方法。研究数据的可视化映射方法，并基于 Unity3D 引 擎实现数据的可视化映射，利用场景剔除技术对显示性能进行优化。 （4）基于深度学习的机床数字孪生模型的物理仿真研究。分析基于仿真数据 回归计算的数字孪生模型物理规则抽象和基于深度学习的物理规则封装。利用数 据的图像化处理方法实现有限元仿真数据到图像的转换，调整条件生成对抗网络 模型，并基于 TensorFlow 实现该深度学习模型。最后，通过本文提出的数字孪生
7

电子科技大学硕士学位论文
模型物理规则融合方法，实现中捷 VMC0656e 机床主轴系统瞬态热力学物理规则 融合。
（5）数字孪生虚拟监控系统的集成与功能测试。分析虚拟监控系统的运行流 程，完成系统的界面设计，各功能模块的集成。搭建虚拟监控系统的测试环境，进 行虚拟监控系统实例测试，对该实例运行过程中系统的流畅性、实时性进行分析。
本文主要章节及技术路线如图 1-1 所示。
基于数字孪生的机床加工过程虚拟监控系统研究与实现

系统设计需求

系统设计原则

关键问题分析

开发工具

网络架构设计

整体架构设计

机床数据分析与采集

数控机床建模

数字孪生模型
第二章 机床加工过程虚拟监控系统总体设计

有限元仿真

深度学习模型建模

多源异构数据集成

缓存、消息队列数 据传输

仿真数据 图像化处理

模型训练

数据交互平台开发

C#、Python混合编 程技术

物理规则封装

第三章 基于多源异构数据的机床 可视化监控设计与实现

Unity3D引擎可视 化开发

第四章 基于深度学习的机床数字孪生模型物理仿真研究

图 1-1 课题技术路线

8

第二章 机床加工过程数字孪生虚拟监控系统总体设计
第二章 机床加工过程虚拟监控系统总体设计
基于数字孪生的机床加工过程虚拟监控系统具有实时可视化监控和机床物理 状态快速仿真两大核心。基于数字孪生的机床加工过程虚拟监控系统的结构比较 复杂，首先要确定虚拟监控系统的设计目标、设计原则和系统开发流程。分析基于 数字孪生的虚拟监控系统的数据映射、物理规则映射的关键问题。明确虚拟监控系 统的设计需求，设计虚拟监控系统的总体网络框架。
2.1 系统设计原则与目标
2.1.1 系统设计目标
基于数字孪生的机床加工过程虚拟监控系统是以数控机床为主要研究对象， 以机床的数字孪生为基础，包含几何行为层面映射和物理规则层面映射的系统。在 几何行为映射层面，研究数控加工过程多源异构数据的可视化映射，实现可视化监 控。在物理规则映射层面，研究基于数字孪生的数控机床物理规则近实时仿真计算 方法，实现机床数字孪生模型物理规则的融合，进而实现基于数字孪生物理规则的 虚拟监控。系统的设计目标包含以下方面：
（1）实现系统高性能数据访问。数控加工过程的数据存在多源性、异构性， 为保证实时监控的实现，保证监控系统显示端高性能的数据访问。
（2）实现虚拟监控系统的实时、流畅运行。虚拟监控系统的目的是对数控加 工过程的实时监控，因此监控系统要保证良好的显示实时性和显示效果的流畅性。
（3）实现物理仿真低误差下的快速计算。在监控系统中，对于物理仿真要求 能够近实时的显示仿真计算的结果，因此监控系统中要求快速的物理仿真计算。
（4）实现虚拟监控系统高拓展性。在不同的应用场景下，需要向虚拟监控系 统添加数据源或设备更新，需要系统具有良好的拓展性。
2.1.2 系统设计原则
在系统设计与实现过程中遵循相关的系统设计原则，有利于虚拟监控系统设 计目标的实现。本文中，系统设计原则如下：
（1）系统性：在虚拟监控系统设计中，要从整体考虑，使系统成为一个有机 的整体。由于虚拟监控系统中涉及到多方面的技术，需要整体考虑，分模块开发再 做集成，从而提高系统设计的质量。
9

电子科技大学硕士学位论文
（2）可靠性：可靠性是系统设计重要的评价指标，代表了系统运行阶段的避 障能力、纠错能力。在数控加工过程中，虚拟监控系统的可靠性关系到数控加工的 安全性和经济性。
（3）扩展性：在实际应用场景下，虚拟监控系统可能面临数据源的增减、设 备的更新、系统功能扩展等情况，在这些应用场景下虚拟监控系统应具有良好的扩 展性。
2.1.3 系统开发流程
在确定虚拟监控系统的设计目标与设计原则后，应按照合理的系统开发流程 进行虚拟监控系统的开发。通过合理的系统开发流程，可以提升系统的开发效率以 及系统的质量。系统开发流程如图 2-1 所示，在确定系统的设计目标、原则、需求 后，进行系统架构设计，划分可视化监控模块和物理规则融合模块，然后在确定模 块的兼容性后进行模块的开发，最后明确模块指标，进行算法设计、模块开发、测 试。
开始

系统设计目标

模块指标

系统设计原则

算法设计

系统设计需求

模块开发

系统架构设计

模块测试

可视化监控模块

物理规则融合模块

NO

模块是否兼容

YES

是否满足指标

NO

YES 结束

图 2-1 虚拟监控系统开发流程

10

第二章 机床加工过程数字孪生虚拟监控系统总体设计
2.2 基于数字孪生的机床加工过程虚拟监控系统的问题分析
2.2.1 机床数字孪生的数据映射的问题分析
在机床几何行为层面的物理空间到数字空间的映射中，需要将数据映射到数 字孪生，通过数据可视化的方法使得机床加工过程多源异构数据进行有效的信息 传递。在数据可视化中主要存在机床加工过程多源异构数据集成、监控系统数据传 输实时性与并发性、加工过程多源异构数据可视化映射的问题。
（1）机床加工过程多源异构数据集成 在对数控机床加工过程的监控中，过程中的数据是监控的核心。这些数据一方 面数据来源多，来自数控系统、传感器等；另一方面，数据结构不同，包含结构化 数据和非结构化数据。由于数据的多源性和异构性，监控系统中对数据的访问比较 复杂，系统开发难度也相对较大。为了提高数据访问的性能和系统开发的效率，需 要对多源异构数据进行数据集成。通过数据集成，将互相关联、来源各异、不同结 构的数据整合，从而提高数据的一致性、数据的利用率。数控加工过程多源异构数 据集成难点在两方面：（1）异构性：数据模型异构，数据的类型、语义、表达形式 等是不同的，数据集成首先要解决就是数据的封装和统一表达。（2）分布性：机床 加工过程各数据源是相对独立的，在数据采集和传输的性能、开发难度上存在一定 问题，需要设计高效的数据采集和传输方式。因此，需要设计机床加工过程多源异 构数据的统一表达和数据集成的算法，对于数据的采集需要在监控系统层面进行 设计。 （2）监控系统数据传输实时性与并发性 多源异构数据的传输实时性与并发性是虚拟监控系统的重要指标，实时性是 监控系统稳定运行的基础，并发性反映了监控系统的负载能力。监控系统中的实时 多源异构数据一方面要用于实时可视化监控，另一方面还需要做持久化，以便于数 据追溯。若将集成后的数据直接发送到可视化映射模块再做持久化，则在计算机中 需要比较大的堆空间用于存储常量，这对虚拟监控系统的运行有较大的影响。若将 集成后的数据先做持久化再发送到可视化映射模块，则在实时性方面有一定的影 响，此外在对数据交互中有较高的并发请求下，会影响到数据的正确性。借助缓存 技术和消息队列技术实现数据的异步传输模式可以很好地解决此问题：可视化映 射对实时性要求高，将实时集成数据进入到缓存中用于可视化映射；数据交互以及 数据持久化对数据的正确性要求更高，将操作请求加入消息队列，然后操作请求再 出消息队列，执行请求操作。 （3）加工过程多源异构数据可视化映射
11

电子科技大学硕士学位论文
将多源异构数据的信息有效的传递给工作人员，需要将数据映射到所开发的 可视化组件中，可视化组件包括二维图表、三维模型等。此外可视化组件存在重配 置的需求，当设备、工艺更新时，监控的内容发生改变，需要重新配置可视化组件。 基于底层图形库（如 OpenGL）开发可视化组件存在难度大、不够灵活的局限，而 基于第三方图形引擎（如 Unity3D）进行开发可以极大提升开发效率，利用第三方 图形引擎的图形用户界面还可以便捷的对所开发的可视化组件重新调整。当前许 多监控系统采用二维方式或视频方式进行监控，存在沉浸感不强、数据规模庞大的 问题，而基于数字孪生的三维监控在沉浸感和减小数据规模方面有一定的优势。在 可视化映射中，虚拟监控系统的流畅性也是一个重要的指标，不仅需要充分利用计 算机硬件资源，还需要优化监控系统的显示性能。
2.2.2 机床数字孪生的物理规则映射的问题分析
在物理规则层面的物理空间到数字空间的映射中，需要将物理规则与数字孪 生相融合，以实现利用机床的物理规则高效反映机床物理状态。在物理规则与数字 孪生融合中存在机床数字孪生模型物理规则的融合方法、物理规则计算速度、物理 规则计算结果的可视化的问题。
（1）机床数字孪生模型物理规则的融合方法 数字孪生是物理空间的物理实体在数字空间通过多维度映射形成的数字虚体， 物理规则是数字孪生的核心内容。物理实体存在大量的物理规则，这些物理规则有 相关的理论，如瞬态热力学中的热传导、对流、辐射相关热力学理论。但对于具体 的问题分析，主要有解析法和有限元法。如在求解主轴系统的瞬态热力学问题时， 对于某零部件温度分布的计算，解析法求解十分复杂，不适合虚拟监控的应用场景。 而有限元法虽然能够相对简便的求解，但是求解时间过长。数字孪生模型的有限元 仿真是一个定对象、变工况的仿真过程，因此充分利用这一特点，对一系列离散的 工况条件进行有限元仿真，使用回归计算模型建模进行物理规则的抽象，再使用深 度学习模型进行物理规则的封装，从而实现物理规则与数字孪生模型的融合。 （2）物理规则的计算速度 在数控机床虚拟监控系统中，对物理规则计算的实时性有一定的要求，因此需 要物理规则的计算有较快的计算速度。有限元仿真方法在结果上可以很好地满足 系统的要求，但是计算速度上不能满足监控系统的需求。当前大多数有限元仿真加 速方法（如仿真计算过程的优化、使用 GPU 加速浮点运算、CPU 并行计算及分布 式集群、基于 FPGA 重构计算等方法）虽然对计算速度有一定的提升，但是仍不满 足监控系统的实时性要求，此外在经济性上也不够好。深度学习的方法能够很好地
12

第二章 机床加工过程数字孪生虚拟监控系统总体设计
拟合线性和非线性关系，借助 GPU 能达到很高的模型训练效率。利用数字孪生模 型的有限元仿真的定对象、变工况特征，首先进行一部分仿真计算，从而得到一部 分有限元仿真结果数据，对这部分数据进行深度学习训练，用深度学习模型拟合物 理规则。再对深度学习模型进行训练、调参，利用训练好的深度学习模型在较小误 差下达到较快的计算速度。
（3）物理规则计算结果的可视化 有限元仿真计算结果大多以特定格式的文件保存，在做可视化时需要用专业 的软件工具。此外计算结果文件一般比较大，数据的存储、处理也对硬件的要求比 较高。有限元仿真计算结果文件中对结果的记录一般包含节点编号、笛卡尔坐标、 节点值等字段，对于可视化映射，存在一定的数据冗余。在深度学习过程中，将仿 真工况数据和仿真结果数据做图像化处理，不仅便于深度学习模型训练，而且利于 仿真结果的可视化。利用图像化处理的数据进行深度学习，充分利用 GPU 的浮点 计算能力，能提升深度学习过程的效率。基于机床数字孪生三维几何模型，将深度 学习模型生成的图像作为贴图，在数据显示时使用三维几何模型和纹理贴图的方 式进行显示，一方面提升了计算结果可视化的效率，另一方面能达到良好的实现效 果。

2.3 虚拟监控系统设计
2.3.1 系统设计需求
基于数字孪生的机床加工过程虚拟监控系统的设计需求包含五大模块：监控 系统配置模块、数据通信模块、可视化监控模块、快速物理仿真模块、监控系统交 互模块，具体需求如图 2-2 所示。
数控机床虚拟监控系统

监控系统配置

机

监

多

床

控

源

数

系

异

字

统

构

孪

界

数

生

面

据

配

配

配

置

置

置

数据通信模块

实 时 数 据 采 集

多 源 异 构 数 据
集 成

实 时 数 据 高 性 能 传 输

可视化监控

机

机

机

床

床

床

状

三

物

态

维

理

数

几

状

据

何

态

可

运

仿

视

动

真

映

仿

显

射

真

示

快速物理仿真

数
字 孪 生
物 理 规 则 融 合

工 况 参 数 虚 拟 验 证

近 实 时 物 理 仿 真 计
算

监控系统交互

监

加

场

控

工

景

系

过

虚

统

程

拟

虚

数

漫

拟

据

游

交

管

互

理

图 2-2 数控机床虚拟监控系统设计需求
13

电子科技大学硕士学位论文
（1）监控系统配置模块：主要用于系统启动前的初始化。包含机床数字孪生 配置、监控系统界面配置、多源异构数据配置，根据不同的机床对象，配置机床的 数字孪生模型、虚拟监控界面、多源异构数据的数据源和数据项。
（2）数据通信模块：主要用于物理设备的数据与虚拟监控系统的数据通信。 包含实时数据采集、实时多源异构数据集成、实时多源异构数据的高性能传输。在 监控系统配置好后，进行实时数据采集，然后在系统服务器中进行数据的集成，最 后基于缓存和消息队列进行实时数据的高性能传输。
（3）可视化监控模块：主要用于用户对机床加工过程的可视化监控。利用 C#、 Python 混合编程技术进行数据的处理，基于 Unity3D 引擎开发机床加工过程状态 数据的可视映射、机床三维几何运动仿真、机床近实时物理仿真结果的显示，进而 实现可视化监控。
（4）快速物理仿真模块：主要用于虚拟监控系统近实时物理仿真。快速物理 仿真主要基于数字孪生的物理规则融合，利用回归计算模型建模对少量的有限元 仿真结果进行物理规则抽象，再利用深度学习的方法对物理规则进行封装，从而实 现数字孪生物理规则的融合。在进行快速物理规则计算时，调用训练好的深度学习 模型即可，从而实现工况参数的近实时物理仿真计算。
（5）监控系统交互模块：主要用于用户与虚拟监控系统的交互。通过三维场 景的漫游、监控系统的虚拟交互以及加工过程数据管理，进而提升虚拟监控系统的 实用性、交互性和高效性。
2.3.2 虚拟监控系统网络架构设计
基于数控机床虚拟监控系统设计需求，设计虚拟监控系统的网络架构。虚拟监 控系统的网络架构包含五层：终端层、终端中继层、服务层、数据源中继层、数据 源层。通过分层的设计，将机床虚拟监控系统按照功能和逻辑进行了清晰的划分， 便于对虚拟监控系统的开发与管理。此外，由于分层的设计，使得后期对虚拟监控 系统的调整、维护、升级的可操作性、便捷性、高效性得到了提高。虚拟监控系统 网络架构各层的设计如下：
（1）数据源层：为虚拟监控系统提供数据，包含机床加工过程相关联的数据 源（机床、数控系统、调度排程系统、传感器等）。数控机床加工过程的多源异构 数据的产生、采集均在这一层，同时利用采集方法抽象、数据类型抽象的方法，以 提高虚拟监控系统的稳定性和开发的高效性。
（2）数据源中继层：数据源中继层主要用于数据的转发，利用工业路由器和 工业交换机将数据源层的数据发送到服务层。此层是连接数据源与监控系统的关
14

第二章 机床加工过程数字孪生虚拟监控系统总体设计

键，需要保证实时多源异构数据稳定、高效、可靠的发送到业务层，使得虚拟监控

系统后续过程的正常运行。 （3）服务层：服务层是虚拟监控系统的核心层，包含系统服务、Redis 缓存服
务、RabbitMQ 消息队列服务、MySQL 数据持久化服务。系统服务包含多源异构数 据的集成、数据的管理，Redis 缓存服务用于保证可视化监控对数据的高速访问、 RabbitMQ 消息队列服务用于保证虚拟监控系统的高性能数据交互、MySQL 数据 持久化服务用于对多源异构数据的持久化。
（4）终端中继层：终端中继层用于终端层与服务层的数据转发，利用工业交 换机、工业路由器、工业无线接入点设备实现终端层与服务层的有线与无线访问， 保证多终端、跨平台条件下终端与服务层的高性能数据发送。
（5）终端层：用户与虚拟监控系统的交互层，将普通用户与管理员用户分开， 普通用户只能使用发布后的虚拟监控系统软件，管理员用户还能进行虚拟监控系

统的配置、后台管理操作。 虚拟监控系统的网络架构如图 2-3 所示。

终端层

终端1

后台管理 ……
终端2

终端1 终端2

终端3

用户 ……
终端4

终端 中继层

工业交换机

工业无线接入点

工业路由器

服务层

系统服务

数据源 中继层

Redis 缓存服务

RabbitMQ 消息队列服务

MySQL 数据持久化服务

工业路由器

工业交换机

数据源层

机床

数控系统

调度排程系统

辅助设备

传感器

……

图 2-3 虚拟监控系统的网络架构

15

电子科技大学硕士学位论文
2.4 本章小结
本章完成了基于数字孪生的机床加工过程虚拟监控系统的总体设计。确定了 虚拟监控系统的设计目标和设计原则，分析了系统设计的流程。从机床数字孪生的 数据映射、物理规则映射两方面分析了虚拟监控系统的关键问题，分析了机床加工 过程多源异构数据集成、监控系统数据传输实时性与并发性、加工过程多源异构数 据可视化映射、机床数字孪生模型物理规则的融合、物理规则的计算速度、物理规 则计算结果的可视化。分析了虚拟监控系统的设计需求，采用模块化的思想将虚拟 监控分为监控系统配置模块、数据通信模块、可视化监控模块、快速物理仿真模块、 监控系统交互模块。针对虚拟监控系统的设计需求，设计了包含终端层、终端中继 层、服务层、数据源中继层、数据源层的虚拟监控系统的网络架构。
16

第三章 基于多源异构数据的机床可视化监控设计与实现

第三章 基于多源异构数据的机床可视化监控设计与实现

在数控机床加工过程中，需要监控机床加工过程实时数据以保证机床的良好 运行状态，对机床加工过程数据可视化的研究是机床监控的核心内容。在机床加工 过程中，机床的数据具有多源性和异构性，状态数据的来源有数控系统、传感器、 采集卡等，加工过程中的数据也包含结构数据、非结构数据等不同的数据结构。本 章首先对机床加工过程数据和数据采集进行分析与设计，设计了基于 Json 的多源 异构数据集成算法，以及基于缓存和消息队列的数据异步传输，然后实现了 C#、 Python 混合编程与数据的处理，最后基于 Unity3D 对数据可视化映射做了实现。

3.1 机床加工过程多源异构数据分析与采集
3.1.1 机床加工过程数据分析
针对机床加工过程的监控，需要实时监测机床的状态，以保证机床良好的运行 状态。对机床的实时监控，主要利用机床加工过程的多源异构数据，多源异构数据 的来源包括数控机床、调度排程、辅助设备等方面，如图 3-1 所示。

部件状态

基本信息

数控机床

机

床 加

调度排程

工

过

程

数

据

辅助设备

运行状态 报警信息 工件物料
机器人 空压机

刀具信息 加工质量 仓储库存 AGV小车
油冷机

其他

环境信息

数字化资料

图 3-1 机床加工过程数据源

17

电子科技大学硕士学位论文
（1）数控机床：包含数控机床基本信息、部件状态信息、运行状态信息、报 警信息、刀具信息、加工质量信息六方面的内容。数控机床基本信息包含机床的型 号、技术参数、维护记录等信息。部件状态信息包含主传动部件和进给传动部件两 方面，主传动部件包含主轴电机、联轴器、主轴系统等部件的信息，进给传动部件 包含伺服电机、丝杠副、导轨副等部件的信息。运行状态信息包含主轴、进给轴、 运行时间等的信息。报警信息包含编号、类型、内容等信息。刀具信息包含刀具的 基本信息与状态信息，基本信息包含编号、类型、刃数等信息，状态信息包含切削 力、温度、振动等信息。加工质量信息包含质量基本信息与检测信息，质量基本信 息包含编号、技术要求、检测标准等信息，检测信息包含公差、表面质量等信息。
（2）调度排程：主要包含工件物料信息和仓储库存信息。工件物料信息包含 的材料属性、质量要求等信息。仓储库存主要包含工件入库、出库等信息。
（3）辅助设备：主要包含机器人、AGV 小车、空压机、油冷机等相关辅助设 备的信息，包含辅助设备的基本信息、技术参数等信息。
（4）其他：包含环境信息、数字化资料。环境信息包含温度、湿度、大气压 等信息。数字化资料为针对物理设备、车间做的数字化描述的资料，如设备的三维 几何模型。
3.1.2 机床加工过程数据采集设计
多源异构数据是监控系统实时监控的核心，为保证监控系统的性能、可靠性和 扩展性，需要对数据采集做多方面的设计。当前许多设备厂商都提供了相应的数据 采集工具包，如表 3-1 所示。由于数据源的数量众多，若单独进行各型号的开发， 会存在编码冗余高、各类型难兼容等问题。由于各厂商的开发包对数据的定义各不 相同，在代码实现和模块数据兼容性能等方面存在问题。

表 3-1 不同厂商设备数据通讯与开发语言

厂商

数据通讯

二次开发语言

西门子

OPC UA

C++、C#等

FANUC

FANUC FOCAS1/2

C++、C#

华中数控

HNCAPI

C++、C#

ABB

RAPID、PC SDK、OPC

C#、Visual Basic

本文针对多源异构数据的采集，从采集方法抽象和数据类型抽象两方面进行

数据采集的设计。将相同的数据采集逻辑进行抽象，针对不同的数据源进行数据采

集时，只需要实现相应设备的特定方法即可，而相同的数据采集逻辑和功能可以重

18

第三章 基于多源异构数据的机床可视化监控设计与实现
复使用，这样很好地解决了编码冗余。对于多源异构数据，由于各厂商开发工具与 数据类型定义的差异性，在数据采集时，还需对数据类型进行抽象，以提高系统的 兼容性。本文将多源异构数据的类型分为数值型（Numeric）、字符串型（String） 以及布尔型（Boolean）三类，数值型表示整型和浮点型的数据，字符串型表示编 码字符数据，布尔型表示开关状态数据。布尔类型的分类主要为了节省数据在存储 空间中的占用，其仅有 true 和 false 两种数据，对于整型数据如 int，内存中占用 4 个字节，可以表示 2 , 2 1 范围内的数据，若用 int 类型存储布尔类型数据会 造成存储空间的浪费。如对于机床，数值类型的数据有主轴的转速、各轴位置等， 字符串类型数据有报警内容、NC 代码等，布尔类型有机床开关机状态、急停状态。 如图 3-2 所示将，相同的数据采集类型统一抽象成接口，然后针对不同的数据类型 实现该接口，在对设备进行数据采集开发时，进行相应的调用即可。
<<Interface>> DataCollection
-collection()

NumericCollection -collection()

StringCollection -collection()

BooleanCollection -collection()

EquipmentDataCollection -getValueCollection() -getStringCollection() -getBooleanCollection()
图 3-2 数据采集 UML 图
3.1.3 数据采集技术
3.1.3.1 西门子 SINUMERIK 840D 数控系统数据采集 西门子 840D 数控系统在工业场景中有着广泛的应用，840D 数控系统的组件
包含 HMI（人机界面）、PCU（PC unit）、数控单元 NCU（Numeric Control Unit）、 Drive、Motors 五个模块，HMI 包含操作面板 OP（Operation pannel）、机床控制面 板 MCP（Machine control pannel）等交互硬件，PCU 主要用于人机交互可视化等程 序运行，NCU 集成了数控和 PLC 控制，Drive 模块是集 V/F、矢量控制及伺服控
19

电子科技大学硕士学位论文
制于一体的驱动控制系统，Motors 为主轴电机和伺服电机，如图 3-3 所示。
西门子840D 数控系统

HMI

PCU

NCU

Drive

Motors

图 3-3 西门子 840D 组件
西门子 840D SL 数控系统提供了两种数据采集方法：（1）Programming Package 开发包；（2）OLE for Process Control（OPC）通信接口。Programming Package 开 发包嵌入性好，支持 Windows 和 Linux 系统，提供了支持 C++语言开发的 SINUMERIK Operate CPP API 标准接口，以及支持 C#语言开发的 SINUMERIK Operate .NET API 标准接口。由于 Programming Package 开发包仅适用于相应的平 台，在跨平台数据采集、数据传输方面存在局限性。OPC 是基于 COM 技术的一种 工业标准，用于规范硬件设备与应用软件之间接口、工业过程数据交换标准化， OPC 经历了 Classic OPC、OPC XML-DA、OPC UA 三个阶段[50]，西门子 840D SL 数控系统 PCU 内置了 SINUMERIK OPC UA 服务器。840D 数控系统集成了数据 存取、报警事件 OPC UA 服务器，其中数据存取符合 OPC Data Access 规范，报警 事件符合 OPC AE（Alarm and Events）规范。考虑到虚拟监控系统的开发需求，本 文采用 OPC UA 来开发西门子 840D SL 数控系统的数据采集。
西门子 840D SL 数控系统 OPC UA 数据采集流程主要包含 SINUMERIK OPC UA 服务器配置、初始化 TCP 环境、连接 OPC UA 服务器、创建 OPC 组、向地址 空间添加 OPC 数据项、读写 OPC 数据项、断开连接。
（1）SINUMERIK OPC UA 服务器配置：包含配置 OPC UA 服务器的 IP 地址 和端口（默认 4840）、证书管理、Endpoints 设置等。
（2）.NET 环境配置：由于本系统开发以 C#为主要语言，在进行 OPC 通讯开 发时，需要对.NET 环境配置。
（3）连接 OPC UA 服务器：OPC UA 客户端与 OPC UA 服务器的连接是实现 通讯的基础，通过客户端获取服务器句柄，从而实现 OPC UA 组、数据项的创建、 读、写等功能。
（4）创建 OPC UA 组：OPC UA 客户端需要通过 OPC UA 组对象提供的相应 接口以实现对 OPC UA 数据项的操作，在添加 OPC UA 数据项之前，需要添加 OPC UA 组。
（5）向地址空间添加 OPC UA 数据项：SINUMERIK OPC UA 变量包含轴变
20

第三章 基于多源异构数据的机床可视化监控设计与实现
量、方式组变量、通道变量、驱动变量等，在数据采集时需要将数据项添加到 OPC UA 组中。
西门子 840D SL 数控系统 OPC UA 数据采集流程如图 3-4 所示。
SINUMERIK OPC UA服务器配置

.NET环境配置

连接OPC UA 服务器

创建OPC组

向地址空间中添加OPC数据项

读写OPC数据项

断开连接

图 3-4 西门子 OPC UA 数据采集流程

3.1.3.2 ABB 机械臂数据采集
ABB 机械臂在工业上有广泛的应用场景，在数控加工过程中用于物料的上下 料、某些型号机床的换刀等。ABB IRC5 控制器是 ABB 机械臂的集成控制柜，包 含控制模块和驱动模块，控制模块包含相关的电子控制装置，驱动模块包含相关的 电机供电电源设备，通过 IRC5 实现对 ABB 机械臂的数据采集。计算机与 ABB 机 械臂的通讯，目前主要有 PC SDK、RAPID Socket、OPC 三种方法，如表 3-2 所示。

表 3-2 ABB 数据采集中不同通讯方式的对比

方式

优势

不足

PC SDK

ABB 提供的开发包，功能全面， 需要 ABB 配置 PC-Interface 接口，

接口丰富。

需要另购。

RAPID Socket

RAPID 为 ABB 的编程语言，功 能全面，专用的开发语言。

需要 ABB 配置 PC-Interface 接口， 需要另购；兼容性不强。

OPC

OPC 为工业标准，兼容性好。

文件访问存在一定限制。

表 3-2 中对比了上述三种不同的计算机与 ABB 机械臂通讯的方式，PC SDK

21

电子科技大学硕士学位论文

以及 RAPID Socket 两种方式都有功能全面、接口丰富的特点，但是需要配置 PC-

Interface 接口，需要另外单独购买，此外兼容性方面也存在一定的问题。由于 OPC

通讯接口有比较好的兼容性能，对于本文虚拟监控系统的后期维护、功能拓展也有

一定的优势，本文采用 OPC 通讯接口方式实现基于 IRC5 的 ABB 机械臂数据采

集。ABB IRC5 OPC 服务器提供了各种预定义的标签，这些标签提供了有关机械臂

控制器当前状态的信息，如图 3-5 所示。除了这些预定义标签，OPC Server 最多提

供 1000 个包含 IRC5 I/O 信号值的其他标签，以及最多 200 个包含 IRC5 RAPID 数

据值的标签。通过 ABB 机械臂 OPC 服务器的数据访问，即可完成对机械臂的大

部分数据采集。

ABB IRC5 OPC服 务器数据访问

<Alias_name1>

RAPID

<Task_name>

IO system

TaskExecutionState

<Alias_name2>

...

TaskState

...

...

图 3-5 ABB IRC5 OPC 服务器数据访问示意图

3.2 机床加工过程多源异构数据集成

3.2.1 机床加工过多源异构数据统一表达
结构化数据是指数据结构规则、由二维逻辑结构表达的数据。非结构化数据是 指数据结构不规则、不能很好地利用数据库的二维逻辑来表达的数据。对于数控加 工过程中的多源异构数据的集成，首先从结构化数据和非结构化数据两方面定义 数据的统一表达式。

3.2.1.1 结构化数据表达

对于结构化数据，定义结构化数据元数据 Structured_meta：

Structured _ meta  item, value, time

(3-1)

item 表示具体的数据项（如数控机床主轴的主轴某测量点的温度项），属于 String 类型，即item ∈ String，用于标识具体的数据项。value 表示数据项的值（如 数控机床主轴的主轴某测量点在某时刻的温度值），属于 Numeric 或 Boolean 类型， 即value ∈ Numeric ∪ Boolean，用于标识数据项的具体值。time 表示数据项的值的

22

第三章 基于多源异构数据的机床可视化监控设计与实现

采集时刻（如数控机床主轴的主轴某测量点温度值相对应的某时刻），属于 Numeric 类型，即time ∈ Numeric，用于标识 value 的对应时刻。
定义结构化数据访问 Structured_access：

Structured _ access  equipment, group, subgroup

(3-2)

equipment 是对设备的描述（如数据源设备的 ID），属于 String 或 Numeric 类

型，即equipment ∈ String ∪ Numeric，用于标识数据源（设备）。group 是对数据

父组的描述，属于 String 或 Numeric 类型，即group ∈ String ∪ Numeric。subgroup

是对数据子组的描述，属于 String 或 Numeric 类型，即subgroup ∈ String ∪ Numeric。

group 和 subgroup 都是用于降低数据索引的时间复杂度以及提高数据组织的性能。

结构化数据的表达为 Structured_data：

Structured _ data  {Structured _ access, Structured _ meta}  {equipment, group, subgroup, item, value, time}

(3-3)

对于各数据源的结构化数据用式 3-3 进行表达。

3.2.1.2 非结构化数据表达

对于非结构数据，在计算机中存储，一般有相应的文件格式。如热成像仪拍摄

的温度分布照片的文件格式为 JEPG，数控加工代码的文件格式 NC。由于非结构

数据的异构性，采用将非结构数据转换成二进制数据的方法消除异构性。如图 3-6

所示，为图像数据转换成二进制数据方法的代码实现。

1

public static byte [] image2Binary(String imagePath){

2

File img = new File(imagePath); // 读取文件

3

BufferedImage bi; //将图片读到缓冲区

4

try {

5

bi = ImageIO.read(img); //转变成IO流

6

ByteArrayOutputStream baos =new ByteArrayOutputStream();

7

// 声明二进制数组输出流，用作存储

8

ImageIO.write(bi, "jpeg", baos);

9

// 将缓冲区的IO流输出到二进制流中

10

byte[] bytes = baos.toByteArray(); // 格式化数组

11

baos.close();//关闭

12

return bytes;//返回数组

13

} catch (IOException e) {

14

// 捕获异常

15

e.printStackTrace();

16

}

17

return null;

18

}

图 3-6 图像二进制转换方法

定义非结构数据的元数据 Unstructured_meta：
23

电子科技大学硕士学位论文

U nstructured _ m eta  {item , num , blob, tim e}

(3-4)

其中，item 表示非结构数据具体的数据项，属于 String 类型，即item ∈ String， 用于标识具体的数据项。由于二进制文件的大小因素，采用块编号 num 和二进制 块 blob 表示二进制数据。num 表示 blob 的编号，属于 Numeric 类型，即num ∈ Numeric，用于标识 blob 的编号。blob 表示数据项的二进制数据，属于 String 类 型，即blob ∈ String ，用于标识数据项的二进制数据。blob 对应于 MySQL 数据库 的 BLOB 类型，包括 TinyBlob（255B）、Blob（65KB）、MediumBlob（16MB）、 LongBlob（4GB）四种类型。time 表示数据项的二进制数据的采集时刻，属于 Numeric 类型，即time ∈ Numeric，用于标识 blob 的对应时刻。
定义非结构数据访问 Unstructured_access：

Unstructured _ access  equipment, group, subgroup

(3-5)

非结构数据访问中的 equipment、group、subgroup 和结构数据中的保持一致。

非结构化数据的表达式 Unstructured_data：

Unstructured _data {Unstructured _access,Unstructured _meta} {equipment, group, subgroup, item, num, blob, time}

(3-6)

3.2.1.3 结构化与非结构化数据统一表达

基于上文提出的结构化数据和非结构化数据的表达，定义结构化和非结构化 数据的统一表达 Data：

D ata  {type, access, m eta}

(3-7)

其中，type 表示数据的类型是否为结构数据，属于 Boolean 类型，即type ∈

Boolean，用于表示数据的类型。access 表示数据访问，meta 表示元数据。

当数据为结构数据：

Data  {type, access, meta}

 {type,equipment, group, subgroup, item, value, time}

(3-8)

当数据为非结构数据：

Data  {type, access, meta}

 {type, equipment, group, subgroup, item, num, blob, time}

(3-9)

3.2.2 基于 Json 的多源异构数据集成算法

对数控机床加工过程的监控，在实时性、查询效率、扩展性等性能方面有一定 的要求。数据集成的目的在于提高系统数据访问的性能，在数据统一表达的基础上， 本文使用 Json 对数控机床加工过程的多源异构数据进行整合。对于数控加工过程

24

第三章 基于多源异构数据的机床可视化监控设计与实现
的实时多源异构数据的集成，首先对原始数据进行解析，再利用多源异构数据的统 一表达对数据进行封装，使得数据的传输、访问、拓展等方面的性能满足虚拟监控 系统的需求。多源异构数据集成流程如图 3-7 所示，首先接受来自各数据源的数 据，形成原始数据；对原始数据进行解析，对于结构化数据和非结构化数据进行相 应的处理；然后采用上文提到的多源异构数据统一表达方法，对数据进行封装，形 成 Json 集成数据。
集成数据（Json）

数据统一表达

结构化数据

非结构化数据

原始数据

数据源1

数据源2

...

图 3-7 多源异构数据集成流程示意图

在数据统一表达的基础上，本文设计了实时多源异构数据集成算法，如图 3-8

所示。

1

While(true){

2

Boolean type = getDataType();

3

< T > equipment = getEquipment();

4

< T > group = getGroup();

5

< T > subgroup = getSubgroup();

6

String item = getItem();

7

Numeric time = getTime();

8

if(type == true){

9

< T > value = getValue();

10

String info = integratE(type,equipment,group,subgroup,item,value,time);

11

}

12

else{

13

Numeric num = getNum();

14

String blob = getBlob();

15

String info = integratE(type,equipment,group,subgroup,item,num,blob,time);

16

}

17

Json jsonData = encapsulate(info);

18

}

图 3-8 实时数据集成算法

实时数据的集成算法主要包含以下几个步骤： （1）数据采集：数据的采集设计与实现在本文 3.1 节中已经提到，从数据采 集方法抽象和数据类型抽象两方面进行数据采集设计，并针对不同类型设备实时
25

电子科技大学硕士学位论文
数据采集进行了设计。对于数据集成模块，在数据集成过程中，调用数据采集模块 的相应 API 用于数据的集成。
（2）数据分类：在本文数据的集成方法中，将数控加工过程的多源异构数据 划分结构化数据和非结构化数据两类，3.2.1 中提出了结构化数据和非结构化数据 的表达。
（3）数据解析：对机床加工过程多源异构数据进行解析。对数控加工过程中 结构化数据进行解析，提取出数据访问信息和结构化数据元数据（数据项、数据值、 数据对应时刻）。对于数控加工过程中非结构数据进行转换，提取出数据的访问， 将各类型的非结构数据转换成二进制数据，根据数据的规模大小进行分块，形成非 结构数据的元数据（数据项、块编号、块、数据对应时刻）。
（4）数据封装：将数控加工过程中的结构化数据和非结构化数据封装成 Json 格式数据，便于后续可视化监控模块对数据的访问。

3.3 加工过程数据的异步传输 3.3.1 基于缓存和消息队列的数据异步传输

3.3.1.1 数据传输方式分析

虚拟监控系统中可视化监控、系统交互、数据持久化都对数据进行访问，但是 硬件资源和软件资源是有限的，需要采用一定的技术来保证可视化监控、系统交互、 数据持久化的高效性、正确性等性能。普通的监控系统大多采用如图 3-9 所示的方 式进行数据传输，对数据先做持久化，可视化监控和系统交互对数据的访问都是在 数据持久化的基础上。

可视化监控

数据持久化

系统交互

数据
图 3-9 普通监控系统数据传输流程示意图
普通传输方法在简单场景下比较适用，开发比较便捷，但是可视化监控服务和 系统交互服务与数据库之间有大量的 CRUD 操作（Create、Retrieve、Update、Delete）。 然而数据库的性能和计算机硬件的水平有限，超过一定量的 CRUD 操作会对数据 库的性能产生较大的影响，如数据错误甚至系统崩溃，对于有较高的数据库 CRUD 操作的场景下并不合适。此外，监控系统对数据准确性也有要求，数控机床加工过
26

第三章 基于多源异构数据的机床可视化监控设计与实现
程的状态数据是加工过程质量和安全的基础，无论是可视化监控还是系统交互，都 要求高并发请求下加工过程状态数据准确，不能出现不可重复读、脏读等错误。本 文的虚拟监控系统需要在高并发请求场景下保证传输的高性能和数据的准确性。
事务是数据库的一个重要特性，是指构成单一逻辑单元的操作集合。事务有以 下特性：（1）原子性，事务中的所有操作作为一个原子不可分割，事务中所有操作 要么全部成功，要么全部失败。（2）一致性，事务的执行使得数据库从一个一致性 状态转移到另一个一致性状态。（3）隔离性，一个事务的执行过程中对其他事务不 可见。（4）持久性，事务一旦成功执行，其对数据库的更新是持久的。事务通过隔 离性、一致性实现并发控制，通过原子性和持久性实现日志恢复，从而能够保证一 定的并发性能以及故障恢复。
在计算机中，锁是在并发下用于限制资源访问的机制，在并发控制中保证数据 操作的互斥要求。在数据库中锁的粒度（即锁的对数据作用范围）有行锁、页锁、 表锁。行锁粒度最小，表示对操作的行进行加锁，资源开销较大但能够极大减少数 据库 CRUD 操作的冲突，但会出现死锁。表锁粒度最大，表示对操作的数据表加 锁，资源开销小但 CRUD 操作的冲突概率较高。页锁的粒度介于行锁和表锁之间， 资源开销和 CRUD 操作的冲突概率一般，会出现死锁。
由于虚拟监控系统需要在高并发场景保证数据的准确性，引擎需要支持事务。 需要锁机制保证数据库数据访问的效率，锁的粒度越小，CRUD 操作的冲突概率越 小，但系统的资源开销越大，而且行锁、页锁会出现死锁。因此，采用普通的传输 模式，仅使用 MySQL 数据库不能很好地满足虚拟监控系统高并发的需求。
3.3.1.2 机床加工过程数据异步传输方法
要保证虚拟监控系统在高并发场景下数据高性能传输与数据准确性，本文采 用异步的方法进行机床加工过程数据的传输。数据异步传输的整体思路是针对不 同的业务需求，采用相应的技术以满足，从而使得系统整体性能达到要求。对数据 实时性、稳定性要求较高的服务，采用缓存技术满足实时性、稳定性要求；对数据 准确性要求高的服务，采用消息队列技术防止高并发场景下出现错误。
狭义上的缓存是指 CPU 的缓存，CPU 在读取数据时先从 CPU 缓存中查找， 若成功找到则读取数据发给 CPU 处理，若未找到则从内存中读取并发给 CPU 处 理，同时将此数据加入到 CPU 缓存中。广义上的缓存是指位于 I/O 速度相差较大 的两种硬件或软件之间，用于协调两者传输速度的结构。本文中的缓存是指广义上 的缓存，缓存在数据访问速度、稳定性、可用性方面有较大的优势。缓存是基于计 算机的高速存储结构，数据访问速度比磁盘快很多。缓存将相应数据存储起来，避
27

电子科技大学硕士学位论文
免了数据频繁的与数据库 CRUD，有效提高了稳定性。在数据持久化服务突然停止 时，缓存能在一定时间内提供数据访问，提高了系统可用性。
目前主流的缓存服务主要有 Memcached 与 Redis，两者对比如表 3-4 所示。 Redis 支持多种数据结构、数据持久化、事务，局限性主要为只能单线程；Memcached 支持多核多线程，局限性为只支持 key/value 数据结构、无法进行持久化。为了便 于数据追溯，缓存中的数据需要持久化，因此需要缓存支持数据持久化。由于 Redis 缓存支持事务、数据的持久化，本文中使用 Redis 缓存服务进行虚拟监控系统数据 异步传输的开发。虽然 Redis 只能单线程，但是可以通过分布式来解决单线程的限 制。此外，在单机单线程下 Redis 也有良好的性能，Redis 的 SET、GET 操作的 QPS （Queries per second）最高能达到十万左右。

表 3-4 Memcached 与 Redis 对比

缓存服务

优势

局限性

Redis

支持多种数据结构、支持持久化、 一致性、事务支持

只能单线程

Memcached

支持多核多线程

只支持 key/value 数据结构、无法进 行持久化

消息队列 MQ（Message Queue）是一种异步的系统不同服务间的通信方式，

系统间的消息在被处理和删除之前一直存储在消息队列。队列是一种先进先出的

数据结构，在消息队列中入队和出队分别由生产者和消费者完成。生产者是指将数

据放入消息队列的服务，消费者是指将数据从消息队列取出的服务。消息队列的优

势主要在异步、解耦、削峰三方面。（1）异步：服务 A 发送请求给服务 B 的处理，

而服务 B 的处理过程缓慢，服务 A 要等待 B 处理完成后再发送下一个请求，这就

造成服务 A 的资源浪费，借助消息队列，服务 A 将请求发送到消息队列中，完成

一次请求，然后继续处理下一个请求。（2）解耦：服务项在生产数据时不用考虑其

他服务对此数据的消费，仅将数据发送到消息队列即可。（3）削峰：由于队列的先

进先出的特性，在高并发量的情况下，请求全部进入队列再逐个出队，保证高并发

下请求执行的准确性。

当前主流的消息队列有 ActiveMQ、RabbitMQ、RocketMQ、kafka 等。其中 ActiveMQ、RabbitMQ 的单机吞吐量为万级，RocketMQ、kafka 的单机吞吐量为十万级；

ActiveMQ、RocketMQ、kafka 的时效性为 ms 级，RabbitMQ 的时效性为 μs 级；

ActiveMQ、RabbitMQ 支持主从架构，RocketMQ、kafka 支持分布式架构。本文虚

拟监控系统需要在高并发场景下有较好的时效性，在本文中使用 RabbitMQ 消息队

28

第三章 基于多源异构数据的机床可视化监控设计与实现
列。RabbitMQ 的时效性为 μs 级，稳定性好，支持简单队列、Work 模式、发布-订 阅者模式、路由模式、通配符模式。不同消息队列的性能的对比如表 3-5 所示。

表 3-5 不同消息队列性能对比

特性

ActiveMQ

RabbitMQ

RocketMQ

Kafka

开发语言

Java

Erlang

Java

Scala

单机吞吐量

万级

万级

十万级

十万级

时效性

ms 级

μs 级

ms 级

ms 级

可用性

主从架构

主从架构

分布式架构

分布式架构

机床加工过程数据异步传输方法如图 3-10 所示，虚拟监控系统的数据需求主

要包含可视化监控服务、系统交互服务、数据库服务三方面，异步传输使用了 Redis

缓存技术、RabbitMQ 消息队列技术。机床加工过程的实时多源异构数据在进行采

集和集成后，以 Json 格式数据进入 Redis 缓存中，可视化监控服务从 Redis 缓存中

获取实时数据。系统交互的所有请求首先加入到 RabbitMQ 消息队列中，然后请求

在消息队列中再出队执行请求。系统交互服务在读取数据时，首先在 Redis 缓存中

进行查找，失败则返回数据库进行查找。Redis 缓存中的数据进行更新时，将数据

加入到消息队列中，然后再出队存储到数据库中，以防止在低硬件水平、高数据量

下造成数据的损坏。通过异步传输的方式，保证可视化监控对数据的读取性能、高

并发下系统交互的性能以及数据的准确性和可追溯。

可视化监控服务

系统交互服务

数据库服务

Redis缓存

RabbitMQ消息队列

机床加工过程数据
图 3-10 机床数据异步传输示意图
3.3.2 Redis 缓存数据更新策略
Redis 缓存采用计算机内存作为数据的物理载体，从而满足高性能。一般计算 机内存是 GB 级别，远小于磁盘的存储容量。为了保证 Redis 的可用性，需要对 Redis 中数据做更新。但是频繁的数据更新会降低 Redis 缓存的性能，所以在本文 中需要采用合理的 Redis 缓存更新策略以保证虚拟监控系统的性能。Redis 的数据 更新方法如表 3-6 所示，包含 noeviction、allkeys-random、allkeys-lru 等更新方法。 在本文的虚拟监控系统中，Redis 缓存中的数据用于可视化监控以及数据持久化，
29

电子科技大学硕士学位论文
可视化监控对于数据的时效性要求高，数据持久化对数据的时效性要求低一些。因 此 Redis 缓存中数据更新以定时更新的方式进行，通过设定数据过期的时间，然后 将缓存中超过设定时间的数据淘汰。

表 3-6 Redis 缓存更新方法

更新方法

方法描述

noeviction

对所有数据禁止淘汰

allkeys-random

随机淘汰选择的数据

allkeys-lru

淘汰最近最少使用的数据

volatile-random

随机淘汰超过过期时间的数据

volatile-ttl

淘汰将要超过过期时间的数据

volatile-lru

淘汰最近最少使用的超过过期时间的数据

为了充分提高本文虚拟监控的性能，在 Redis 缓存更新方法的基础上进一步改

进了缓存更新策略，即动态时间数据更新策略。在动态时间数据更新策略中，以硬

件参数为基础，根据缓存中数据量的大小，动态的调整缓存中数据更新时间（UT）。

通过采用动态时间数据更新策略，避免了在小数据量情况下缓存更新对计算机资

源的浪费，同时保证了在大数据量下 Redis 缓存的可用性。从数据首次进入 Redis

缓存中开始，到超过设定的硬件参数阈值的时间作为初始数据更新时间（IUT）。利

用消息队列对该时间内的数据进行入队操作，然后消息队列出队做持久化，淘汰掉

Redis 缓存中的该部分数据。而频繁的调整 IUT 不利于性能的提升，因此在之后的 每个数据更新时间周期内，当每次的 UT 与 IUT 差值超过一定数值时，重新设置 IUT，执行相应的入队、出队和缓存更新。

3.3.3 基于 SpringBoot 设备数据管理平台的实现
数控加工过程多源异构数据不仅是可视化监控的核心，而且在加工过程分析 也有重要作用。除了数据的可视化监控，对各数据源数据进行分析也有一定的需求， 数据方面的系统交互主要利用数据管理平台完成。数据管理与可视化监控的需求 不同，数据管理系统的用户端对硬件的需求比可视化监控系统小，其主要的处理过 程在服务端完成，用户端用于数据的显示，因此数据管理系统基于 B/S 模式进行 开发。本文基于 SpringBoot 框架开发了用于机床加工过程数据管理的数据管理平 台，便于用户进行机床加工过程数据的管理和分析，主要开发技术如图 3-11 所示。

30

第三章 基于多源异构数据的机床可视化监控设计与实现

Bootstrap

前

端

Thymeleaf

SpringBoot

后

端

SpringSecurity

CSS

数 据

MySQL

存

储

MongoDB

MyBatis

其

ElasticSearch

他

Gradle

图 3-11 数据集成系统结构及技术

设备数据管理平台为用户提供了数据的便捷访问，在本文中基于 Java 语言 Web 应用开发的方式进行了实现。数据管理系统采用了前后端分离技术，前端主 要采用了前端开发开源工具 Bootstrap、模板引擎 Thymeleaf，后端的开发主要基于 SpringBoot 框架，数据库采用了 MySQL、MongoDB，数据库连接池采用 MyBatis， 此外使用了 ElasticSearch 搜索引擎进行数据检索，使用 Gradle 进行项目代码管理。 前端部分包含普通用户视图和后台管理视图，普通用户视图用于用户与系统的数 据交互，包括数据搜索、分类、标记等，后台管理视图用于系统管理员对系统的维 护。后端部分为各功能模块的代码实现，由于采用了 Spring 框架，因此后端使用 MVC（Model、View、Controller）模式进行开发，数据管理平台的用户端如图 3-12 所示。

图 3-12 数据管理平台用户端
31

电子科技大学硕士学位论文
3.3.4 性能测试与对比
为了高效的开发本文基于数字孪生的机床加工过程虚拟监控系统，数控加工 过程多源异构数据的异步传输主要使用 C#语言开发，数据库使用 MySQL 5.5.62， 缓存使用 Redis 4.0.2，消息队列使用 RabbitMQ 3.6.14。本文异步方式相比于普通 方式，增加了 Redis 缓存和 RabbitMQ 消息队列。引入 Redis 缓存的目的是提高多 源异构数据的读写性能，从而提升系统的实时性。引入 RabbitMQ 消息队列的目的 是提高在高并发访问下数据交互的准确性，从而提升系统整体的并发性能。吞吐量 是评价并发性能的重要指标，反应了对象的负载能力。因此，利用本文 3.3.3 节的 数据管理平台的接口，测试异步方式与普通方式下数据读写性能、吞吐量。
系统数据交互中有频繁的数据读写操作，对比了普通数据传输方式与异步传 输方式在系统数据交互中数据的读写性能。测试计算机的配置为 CPU 为 Intel Core i5-4200M 2.5GHz，内存为 8GB 1600MHz，操作系统 Windows10。使用 3.3.3 节中 设备数据管理平台的接口分别对普通模式（C 组）和异步模式（A 组）进行了测试。 普通传输模式中数据直接在 MySQL 数据库进行读写；异步传输模式中，读写请求 进入消息队列再出队列执行，数据与 Redis 缓存进行写操作，数据的读操作先在 Redis 中进行，读取失败再到 MySQL 中进行。分别从 3 次读操作和 1 次写操作开 始以 10 倍递增到 3000 次读操作和 1000 次写操作进行测试，每组进行三次测试。 四组测试条件下，C 组每组平均耗时分别为 35ms、482ms、2019ms、14584ms，A 组每组平均耗时分别为 22ms、119ms、446ms、2775ms，随着负载的增加，A 组相 比 C 组的提升越明显，测试结果如图 3-13 所示。在 3000 次读操作和 1000 次写操 作下，C 组的时间是 A 组的 5.4 倍，异步传输下系统性能得到了很大提高。
图 3-13 普通模式与异步模式读写性能对比结果
32

第三章 基于多源异构数据的机床可视化监控设计与实现
测试了普通方法和异步方法的并发性能，以 3.3.3 节中设备数据管理平台的数 据标记为测试接口，利用 JMeter 进行了了压测，并发量 5000，循环执行 10 次。数 据标记的次数的初始值设置为 100，每个请求对数据标记的次数做减 1 操作，当标 记次数减到 0 时不再执行请求。标记次数的正确值为 0，并发性能较差会出现异常 负值。对比了普通模式与异步模式下系统的吞吐量和平均响应时间，在三次测试中， 有普通模式（C 组）下平均响应时间为 146ms，平均吞吐量为 1241，标记次数最终 结果出现了异常负值；异步模式（A 组）下平均响应时间为 159ms，平均吞吐量为 3276，标记次数最终结果均为正确值 0。异步方式相比于普通方式吞吐量提升了 1.64 倍，准确性也得到了提高，测试过程中吞吐量结果如图 3-14 所示。
图 3-14 普通模式与异步模式吞吐量测试结果
3.4 加工过程实时数据处理 3.4.1 C#、Python 混合编程技术与实现
本文的虚拟监控系统主要基于 Unity3D 引擎和 C#语言开发，可视化映射需要 对数控机床加工过程大量的多源异构数据处理，Python 语言和丰富的第三方库有 利于数据的高效处理和系统的便捷开发。此外，Python 语言在深度学习和图像处 理方面也有很大的优势。为了保证本文虚拟监控系统的高性能，本文采用了 C#语 言和 Python 语言混合编程的方法。
C#是针对.NET 环境的编译型语言，Python 语言是解释型语言，C#语言和 Python 语言混合编程的核心问题是两种语言之间的通信问题。进行混合编程主要 有两种方式：扩展方式和嵌入方式。扩展方式指通过其他语言实现 Python 的功能 模块，嵌入方式指将 Python 解释器配置到运行环境中，使系统能够运行 Python 代
33

电子科技大学硕士学位论文

码。扩展方式为使用 IronPython，嵌入方式为 C#接口调用，调用.dll 动态链接库、.py 文件、可执行 exe 文件。IronPython 是.NET 环境的 Python 实现，包括编译器、执 行引擎和运行时支持，能够与.NET 已有的库很好的整合。但是 IronPython 对 Python 中的第三方库（NumPy、OpenCV）的兼容存在问题，无法满足本文中虚拟监控系 统的需求。通过 C#调用动态链接库的方法需要使用 C++程序调用 Python 文件，然 后将其做成动态链接库，在 c#中调用此 dll 文件，该方法受 Python 位数和运行环 境的限制，限制了本文虚拟监控系统的扩展。调用.py 文件的方式为在 C#程序中调 用 Python 脚本，执行速度较快，需配置 Python 环境。调用可执行 exe 文件的方法 将 Python 程序打包成可执行 exe 文件，无需配置 Python 环境，但执行速度慢，参 数传递效率不高。
通过上述分析，在本文机床加工过程的虚拟监控系统中，C#和 Python 的混合 编程采用嵌入方式，通过 C#接口调用 Python 脚本的方法，实现混合编程。数据处 理需要保证高效性，将不同的数据处理方法用 Python 脚本封装，在监控系统主体 C#程序执行过程中，数据处理的部分用 Python 脚本执行。方法的实现主要基于公 共语言扩展（CLE），CLE 是基于对象的管理平台，提供了 c/c++和脚本语言接口， 用于对象的相关操作，CLE 将对象组织成为服务组对象、服务对象、服务条目对 象、CLE 对象 4 个层次，每个 CLE 对象定义特定的功能函数。在本文中，主要基 于 CLE 实现 C#对 Python 的操作。混合编程的流程如图 3-15 所示，本文中混合编 程的实现采用 Python 3.6、C# 7.0、.NET 4.7。

开始

获取全局Python原 生对象

环境配置

创建对象实例

初始化Python脚本 接口
加载脚本文件

调用python函数
设置/获取python 变量数值

结束

图 3-15 C#、Python 混合编程流程
首先在服务器中完成混合编程的环境配置，包括.NET、Python、CLE、集成开 发环境（IDE，本文中使用 Visual Studio 2017 进行 C#编程开发，使用 PyCharm 2017

34

第三章 基于多源异构数据的机床可视化监控设计与实现
进行 Python 编程开发）等的相关配置。IDE 中编写相应的 Python 数据处理代码，
在 C# 程 序 中 调 用 函 数 "_InitRaw()" 初 始 化 Python 脚 本 接 口 ， 使 用 函 数
"_LoadRawModule()"函数加载 Python 脚本文件，使用函数"_ImportRawContext ()"
获取全局 python 原生对象，使用函数"XX._Call()"函数创建 Python 类的实例，使用
函数"XX._Call()"调用 Python 函数，设置或获取 Python 变量数值。如图 3-16 所示，
为 C#、Python 混合编程的代码实现。
namespace call_python { class Program { static void Main(string[] args) { StarCoreFactory starcore= StarCoreFactory.GetFactory(); StarServiceClass Service=starcore._InitSimple("test","123",0,0); StarSrvGroupClass SrvGroup = (StarSrvGroupClass)Service._Get("_ServiceGroup");
//初始化Python接口 SrvGroup._InitRaw("python",Service); //--加载Python SrvGroup._LoadRawModule("python","","..\\python.package\\testpy.py",false); //--创建全局Python对象 StarObjectClass obj = Service._ImportRawContext("python","",false,""); //--调用tFunction函数 StarParaPkgClass ParaPkg = (StarParaPkgClass)obj._Call("tFunction", "Data1 ", "Data2"); //--输出结果 Console.WriteLine("ret from python : "+ParaPkg._Get(0)+" "+ParaPkg._Get(1));
SrvGroup._ClearService(); starcore._ModuleExit(); } } }

图 3-16 基于 CLE 的混合编程的实现

3.4.2 机床运行数据处理方法

3.4.2.1 野值剔除

在机床加工过程中，由于目标数据的采集受传感器、采集卡等采集传输设备的

干扰，数据的接收中会出现数据的异常跳变，即出现偏离目标数据变化规律的野值。

在机床加工过程监控系统中，野值对机床加工过程的可视化监控有较大的影响，如

设备零部件的几何位置数据的野值点，在三维可视化监控中会引起画面的跳变，因

此在数据的处理过程中需要剔除野值。野值剔除的方法有阈值剔除法、差分检测法、

管道剔除法等，在本文中采用了阈值剔除法、差分检测法。

阈值剔除法是一种便捷高效的野值剔除方法。对于有阈值范围的数据，给定阈

值范围 d ,

（如沈阳中捷五轴机床 VMC0656e，A 轴摆动角度 115°），当

传输到可视化监控部分的数据不在该阈值范围内时，判定此数据属于野值，在数据

处理过程中直接剔除此数据。阈值剔除法处理数据时需要设置合理的阈值范围，避

免剔除掉正常的数据。

35

电子科技大学硕士学位论文
差分检测法是一种应用广泛的野值剔除方法。对于数据范围有限的数据，根据 过程中前后两个数据的相关性来判断野值。如对于机床的某旋转零部件，其角速度 的取值范围 ω , ω （如沈阳中捷五轴机床 VMC0656e，C 轴转角度 n×360°， 最大转动速度 33.3 rpm），其转角的前后两个测量值为φ , φ ，两个测量值之间的 时间间隔为Δt，则正常情况下该测量值应该满足ω ⋅ Δt φ φ ω ⋅ Δt， 否则判定此数据属于野值，在数据处理过程中剔除此数据。
管道剔除法是根据一定时间内的测量数据，进行线性或非线性关系拟合，对比 实际值与预测值，若实际值超过预测值的阈值范围，则判定此数据属于野值。根据 已有的若干个数据点拟合出相应的关系得到预测值d ，实际值为d ，管道上限 与下限的差值∆d，则该实际值应满足|d d | ∆d，否则判定此数据属于野值， 在数据处理过程中剔除此数据。
3.4.2.2 插值方法
数据在采集、传输、处理过程中会出现数据点的跳变、丢失等，在进行可视化 监控时会出现画面跳动，影响可视化的效果。此外，部分数据的采集频率低于可视 化监控画面的刷新频率（一般保证流畅性需要 30 帧），也需要进行差值处理。差值 的间隔过小会占用大量硬件资源，影响其他服务的性能，差值间隔过大会影响可视 化的流畅性。在本文中，可视化监控部分的插值按照满足 30 帧刷新率为条件，根 据机床各轴的运动特性，数控机床的三维可视化监控中采用 Unity3d 引擎的 Lerp 函数进行线性插值。
Lerp 函数：public static Vector3 Lerp(Vector3 a_site, Vector3 b_site, float t) 其中 a_site，b_site 为 Vector3 类型的数据（三分量坐标），t 为间隔，取值 0~1， 取 0 时返回 a_site，去 1 时返回 b_site。通过 Lerp 函数，在 a_site 和 b_site 之间进 行插值，使得机床三维可视化监控中画面更平滑。
3.4.2.3 坐标转换
在三维可视化监控中，由于设备坐标系与 Unity3D 引擎的坐标系不同，在数据 处理中需要进行坐标转换。Unity3D 引擎有世界坐标、屏幕坐标、视口坐标、GUI 坐标。机床坐标系是以机床原点为坐标系原点的右手笛卡尔直角坐标系。世界坐标 是 Unity3D 场景中实体显示的坐标系，屏幕坐标是以屏幕左下角为远点、以像素来 定义的坐标系，视口坐标系和 Unity3D 引擎中的对象相机（camera）相关，GUI 坐 标系和屏幕坐标系类似。坐标系之间的转换通过如下方法：
（1）世界坐标到屏幕坐标的转换：camera.WorldToScreenPoint()
36

第三章 基于多源异构数据的机床可视化监控设计与实现
（2）屏幕坐标到视口坐标的转换：camera.ScreenToViewportPoint() （3）视口坐标到屏幕坐标的转换：camera.ViewportToScreenPoint() （4）视口坐标到世界坐标转换：camera.ViewportToWorldPoint() （5）机床坐标到世界坐标的转换：以机床三维模型在 Unity3D 场景中的位置 为初始值，叠加各轴实时数据的改变量。

3.5 数据可视化映射方法与实现

机床加工过程的数据经过分析、采集、集成、传输、处理后，基于 Unity3D 引 擎进行可视化映射，如图 3-17 所示。可视化映射是机床数据可视化显示呈现的核 心，将处理后的数据映射成可视化元素。可视化元素包含可视化空间、可视化标记、 视觉通道。可视化空间是数据的显示呈现空间，在本文中采用三维与二维结合的方 式进行可视化开发。可视化标记是数据到几何元素的映射，分为点、线、面、体。 视觉通道是数据值到可视化显示呈现参数的映射。相比于基于 OpenGL、DirectX、 OpenglES、Vulkan、Metal 等图形库的方式进行监控系统开发，Unity3D 引擎封装 了大量的底层函数，还能根据运行平台灵活选择图形库，对于开发的高效性、兼容 性有很大的优势。此外，利用 Unity3D 引擎，能方便地对系统配置，对于系统的后 期调整、配置、拓展，有较高的可用性。在不同的应用场景下，当需要向虚拟监控 系统添加数据源或设备更新时，在 Unity3D 中进行相应操作，再重新发布软件即 可，极大的提高了虚拟监控系统的拓展性。

数据分析

数据采集

数据集成

数据传输处理

可视化映射

图 3-17 基于多源异构数据的机床可视化监控开发流程
3.5.1 基于 Unity3D 可视化映射方法与实现
基于 Unity3D 平台能进行多种可视化映射开发，本文基于 Unity3D 引擎进行 了统计图表、动态贴图、网格渲染、脚本驱动方法的可视化映射开发。
（1）基于 UGUI 统计图表方法 统计图表是数据可视化的一种重要方法，如散点图、折线图、柱图等，在本文 中基于 UGUI 实现统计图表的可视化方法。UGUI 是 Unity3D 引擎的 UI 系统，具 有开发效率高、拓展性能好、与 Unity3D 引擎兼容性强的优势。UGUI 提供了 Text、 Image 等基础组件，本文基于 UGUI 的基础组件进行统计图表的开发。实现内容包 含三个部分：集成数据解析、统计图表属性封装、数据可视化映射。集成数据解析 是对本文 3.2 节中数据集成后 Json 格式的数据进行解析，并做相应的处理。在监
37

电子科技大学硕士学位论文
控系统中，同类型的统计图表类型会使用多次，为了提高开发效率，进行统计图表 属性封装。将各类型统计图表模块化，在使用该类型统计图表时，只需对统计图表 的相关属性（如数据接口、图表标题、轴）进行配置，无需重新开发。数据可视化 映射是将解析后的数据映射到 UGUI 组件属性的过程，将实时数据动态的转换到 UGUI 组件的属性参数。基于 UGUI 统计图表方法的实现效果如图 3-18 所示。

图 3-18 基于 UGUI 统计图表方法的实现效果

（2）基于 OpenCV 动态贴图方法 云图对于一些物理量（如温度、力等）的值、分布，有较好的呈现效果。在三 维建模中，模型的呈现一般通过白模和贴图的方式进行。通过三维白模和动态云图 贴图的方式，能很好的呈现设备的物理状态。基于 OpenCV（Open Source Computer Vision Library，开源计算机视觉库）能够实现数据到图像的转换以及图像的处理操 作。利用 OpenCV 将数据转换成图像，再将图像处理成材质，在 Unity3D 中在白 模上动态加载材质，基于 OpenCV 动态贴图方法实现流程如图 3-19 所示。

3DS Max建模

显示呈现

数据

点、面优化

OpenCV处理

图 3-19 基于 OpenCV 动态贴图方法实现流程
首先在 3DS Max 进行三维建模，为了减少显示过程中的运算量，对模型的点 数、面数进行优化。对数据进行初步处理后，利用 OpenCV 将数据转换成图像，再 根据物体的几何特征转换成贴图。最后在 Unity3D 中编写动态加载贴图的 C#脚本， 将脚本加载到相应的几何对象上。对某轴加载瞬态温度场云图效果如图 3-20 所示。

38

第三章 基于多源异构数据的机床可视化监控设计与实现

观察 相机

轴

动态贴图前

动态贴图1

动态贴图2

图 3-20 基于 OpenCV 动态贴图方法实现效果

（3）基于网格的渲染脚本方法

在 Unity3D 中，无论是外部程序（如 CREO、3DS Max）导入的三维模型，还

是 Unity3D 引擎内置的组件，物体的显示都是通过网格进行的。网格是 GPU 用来

绘制复杂内容的结构。网格包含至少一组定义 3D 空间中点的顶点，以及一组连接

这些点的三角形，三角形构成了网格所代表的任何表面。三角形的可见性取决于其

法线的方向，法线方向一侧可见，另一侧为透明。当三角形顶点逆时针排列时，观

察方向显示为透明（不可见）；当三角形顶点顺时针排列时，观察方向可见，如图

3-21 所示。在绘制四边形时，需要将三角形按照特定的结构进行组合。在进行渲染

时，每个顶点的颜色独立渲染，相邻顶点间进行插值处理。

5

6

1 可见

1

2

不可见

4

3

2

2

3

1

3

图 3-21 三角形可见性示意图

机床在加工过程中，机床根据加工代码进行相应的操作。根据加工代码在三维 空间中绘制出刀具的轨迹，对于数控加工非常必要。在本文中，主要对.nc 格式的 数控加工代码进行了解析，并利用基于网格的渲染脚本方法实现了加工轨迹在三 维空间的显示，如图 3-22 所示。

39

电子科技大学硕士学位论文
图 3-22 基于网格的渲染脚本方法实现 nc 代码轨迹显示
（4）基于三维模型的脚本驱动方法 对于机床各轴的位置数据，统计图表、Mesh 编程等方式不适合数据的呈现。 基于机床各轴的三维模型，利用实时数据在三维场景中驱动三维模型运动的方法 能较好的呈现机床各轴的运动。 基于三维模型的脚本驱动方法主要利用 Unity3D 引擎实现，实现流程如图 323 所示。利用三维建模软件进行设备的三维建模，然后利用 3DS Max 进行模型的 点数、面数的优化，以及添加材质、灯光、制作 UV 贴图，最后以 FBX 文件格式 导出到 Unity3D 引擎中。在 Visual Studio 中进行模型驱动脚本的开发，Unity3D 的 脚本提供了 Start、Update 等基础函数，其中 Update 函数为每帧更新调用此函数， 在 Update 中调用 transform.Translate()方法实现物体的运动。各轴的实时数据经过 采集传输处理后，作为参数传递到 transform.Translate()。根据各轴的运动特性，编 写相应的驱动脚本，然后将脚本绑定到对应的物体上，从而实现基于三维模型的脚 本驱动方法。
图 3-23 基于三维模型的脚本驱动方法实现流程
3.5.2 可视化性能的优化
在本文中，虽然已在建模阶段对三维模型做了一定的优化，但是当在较大规模 的场景中，当设备的数量增多，场景的运算负荷就会增大，从而降低显示的帧数，
40

第三章 基于多源异构数据的机床可视化监控设计与实现

引起画面卡顿等异常。由于观察视角的限制，场景中根据观察视角与物体的空间位 置关系，被遮挡和不在视角内的物体无需进行渲染。通过场景剔除的方法，减少系 统渲染的运算量，从而提升系统显示的流畅性[51]。在 Unity3D 中，主要有两种场 景剔除：遮挡剔除和视锥剔除。遮挡剔除即把由于空间位置关系被遮挡的物体进行 从观察视角渲染对象中剔除，视锥剔除即把不在观察视角的视锥范围内的物体进 行剔除。
在本文中，由于三维监控中具有场景漫游的功能，为保证当设备数量较多时也 具有一定的性能，因此采用遮挡剔除技术，遮挡剔除技术的开发流程如图 3-24 所 示。遮挡剔除使用 Unity3D 引擎的 Occlusion Culling，首先在 Unity3D 中进行三维 场景的搭建，Unity3D 引擎的 Occlusion Culling 进行相关的配置，然后对要进行遮 挡剔除的对象标记为 static，再创建 Occlusion Area（s 即剔除窗口），最后进行渲染， 从而实现遮挡剔除。

场景搭建

对象标记

烘焙

Unity3D配置

设置剔除窗口

可视化

图 3-24 遮挡剔除开发流程

3.6 本章小结
在本章中，针对基于多源异构数据的机床可视化监控，首先进行了机床加工过 程多源异构数据的分析、数据的采集设计与实现。为提高多源异构数据的访问性能， 设计了集成数据的统一表达和基于 Json 的数据集成算法。为提高虚拟监控系统在 可视化监控、系统交互、数据持久化方面的性能，采用了基于 Redis 缓存、RabbitMQ 消息队列的数据异步传输方法，开发了数据管理平台，验证了本文异步传输模式相 比于普通传输模式的性能提升。为高效处理数据，基于 CLE 实现了 C#和 Python 的混合编程，并对数据的处理进行了分析与设计。最后基于 Unity3D 引擎设计实现 了基于 UGUI 统计图表方法、基于 OpenCV 动态贴图方法、基于网格的渲染脚本 方法、基于三维模型的脚本驱动方法，设计了利用场景剔除对技术进行可视化性能 优化的方法。

41

电子科技大学硕士学位论文

第四章 基于深度学习的机床数字孪生模型物理仿真研究

由于机床的结构复杂，在机床加工过程中对机床的一些物理状态的测量比较 困难，基于机床的数字孪生模型的物理规则进行机床的加工过程监控是一种有效 的方法。数字孪生是物理对象的数字化描述，数字孪生不仅包含对象的几何层面还 包含对象的物理层面，在对象的物理层面实现数字孪生需要融合物理规则。基于对 象数字孪生物理层面的数据，利用可视化的方法，实现对象的物理状态的可视化监 控。而当前的物理仿真计算存在计算速度慢的问题，不能满足监控系统的需要，本 文充分利用数字孪生的特性，基于有限的物理仿真计算数据、图像化处理技术、深 度学习，实现数字孪生物理仿真的快速计算，进而实现基于数字孪生的虚拟监控。

4.1 数字孪生模型物理规则融合方法

如图 4-1 所示，物理层面是数字孪生的几何层面外的又一重要部分，当前大多

数的研究工作采用三维建模和数据驱动的方法实现设备数字孪生几何层面的融合，

而物理规则方面的研究工作大多在概念层面。在本文中，通过基于仿真数据回归计

算建模的物理规则抽象与基于深度学习模型的物理规则封装，实现设备数字孪生

物理层面的融合。

有限元模型

物理规则融合

数字孪生-物理

设 备

数

字

孪

生

三维模型

数据驱动

数字孪生-几何

图 4-1 设备数字孪生层次
4.1.1 基于仿真数据回归计算建模的物理规则抽象
设备数字孪生的物理层面是设备各个物理规则的集合。物理规则运算的一种 高效方法是有限元仿真法，通过有限元仿真计算，能求解出物理量的值、分布等。 由于设备数字孪生的确定性，即物理空间中的设备在数字空间中有确定的数字孪 生对象，因此在进行基于数字孪生模型的有限元仿真时，当针对确定的物理问题进 行多组工况的有限元仿真计算，导入模型、定义材料、划分网格等预处理步骤无需 重复，仅需改变工况条件。但是对于复杂的问题和对象，有限元仿真方法存在计算 时间过长的问题，因此在数字孪生中集成有限元仿真计算模块的方法的性能比较

42

第四章 基于深度学习的机床数字孪生模型物理仿真研究

有限。在真实的物理设备中，物理规则的发生是实时的，因此在数字孪生中，物理 规则的计算时间不应过长。基于已有的仿真数据建立回归计算模型的方法，在一定 的计算精度范围内，求解时间上比有限元法更具有优势。
基于仿真数据回归计算建模的物理规则抽象流程如图 4-2 所示，通过对问题分 析在数字孪生几何模型、材料属性、工况参数等基础上，建立有限元分析模型；然 后利用分析工具进行单元划分、网格控制、设定约束等前处理过程；再通过求解方 法选择、计算参数设定等完成工况求解；由于计算结果文件一般是较大的二进制文 件，利用后处理工具做初步的处理，便于后续的数据处理；通过对多组工况参数的 求解，对形成结果数据集；最后利用结果数据集，建立回归计算模型，实现物理规 则的抽象。

材料属性

数字孪生 几何模型

有

有

限 元 分

建 模

限前 元处 分理

析

析

工 况 求 解

后 处 理

有结 限果 元数 分据 析集

回 归建 计模 算

工况参数

图 4-2 基于仿真数据回归计算建模的物理规则抽象流程
4.1.2 基于深度学习的物理规则封装
根据通用近似定理（Universal Approximation Theorem），一个包含足够多神经 元的多层前馈网络，可以以任意精度近似任意连续函数[52]，如图 4-3 所示。
f(x)

可被近似 x

...
f(x)
...

x

(a)

(b)

图 4-3 神经网络任意精度近似连续函数示意图。(a)任意函数；(b)用神经网络以任意精度近似

通过适当的参数可以利用神经网络近似复杂的函数，利用神经网络的结构构 建回归模型，从而建立起有限元仿真参数与有限元仿真结果的映射关系。深度神经 网络是多隐藏层的神经网络，深度神经网络具有较强的特征学习能力，此外深度神
43

电子科技大学硕士学位论文

经网络在训练上的难度，可以通过“逐层初始化”来有效解决[53]。深度学习是基于

深度神经网络的学习，通过对有限元仿真数据做图像化处理，再基于深度学习构建

物理规则的回归计算模型，实现物理规则的封装。

基于深度学习的物理规则封装的流程如图 4-4 所示，为了便于模型训练以及提

升可视化性能，将有限元仿真工况参数数据和经过后处理工具处理后的有限元仿

真结果数据进行图像化处理；然后将转化成图像后的数据根据深度学习模型再做

进一步处理，制作深度学习的数据集；确定深度学习模型的类型，针对训练的对象

在模型结构和学习过程上做调整和优化；将数据集划分为训练集和验证集，利用训

练集和验证集对深度学习模型进行训练，调整深度学习模型的参数，使得模型效果

最优；模型调优后，将深度学习模型打包，实现基于深度学习的物理规则的封装。

图

工况参数数据

像

化

处

有限元仿真

理

制 作 深 度 学

习 数 据 集

深

度 学 模

构 建

型

模 型 训 练 与

参 数 调 优

模 型 封 装

结果数据

图 4-4 基于深度学习的物理规则封装流程

4.2 数据的图像化处理技术
通过对数据的图像化处理，一方面便于深度学习模型的训练过程，另一方面提 升了监控系统中该部分的可视化性能。对数据的图像化处理主要包含两部分：对工 况参数的图像化处理和对有限元仿真结果数据的图像化处理。工况参数的图像化 处理在对有限元分析问题的基础上，将各参数分配到多通道图像的各通道上，利用 OpenCV 将数据转换成多通道图像。有限元仿真数据的图像化处理在对初始有限元 分析结果文件初步处理的基础上，利用 Pandas（分析结构化数据的工具集）将数据 转换到矩阵，再做图像化处理。
4.2.1 有限元仿真数据的分析
有限元仿真过程数据主要分为两部分：分析参数和结果数据，分析参数包括工 况条件、材料属性、约束等，结果数据是指有限元求解后的节点值、网格信息等。 由于本文中的有限元仿真是对模型的物理状态仿真，材料属性、网格信息等在同一 组分析问题中保持一致，改变的数据是工况条件数据（如转速、热流量等）。一般 有限元分析软件在求解过程中会产生两部分数据：临时数据和输出数据，临时数据 在求解完成后被清除，输出数据是软件在求解完成后按照定义的存储结构生成的 数据文件。输出数据包含了模型数据、网格信息、约束信息、载荷数据等，以 ANSYS

44

第四章 基于深度学习的机床数字孪生模型物理仿真研究
为例，如图 4-5 所示，生成的文件分为文本类型（Text）和二进制类型（Binary） 两大类。文本文件是以文本形式存储的数据，如日志文件、出错文件等。ANSYS 中大部分数据是以二进制文件的形式存储，如数据库文件、结果文件等。
日志文件

文本文件

出错文件

ANSYS数据文件

... 数据库文件

二进制文件

结果文件

...

图 4-5 ANSYS 数据文件

在本文中，物理规则的融合主要利用工况参数数据和分析结果数据建立基于 深度学习的回归计算模型。ANSYS 的结果文件以二进制的形式存储求解的结果数 据，根据不同的求解问题，有不同的结果文件格式，如 RST（结构和耦合场分析）、 RTH（温度场分析）、RMG（磁场分析）、最优设计（BRST、BRTH、BRMG）。ANSYS 二进制结果文件包含文件头和数据项两部分，如表 4-1 所示。文件头部分包含指向 数据的指针，用于数据的查找和读取，数据项部分包含节点存储表、单元存储表、 数据集索引表、坐标系描述、单元节点组应力等。

表 4-1 ANSYS 二进制结果文件构成

数据部分

描述

内容

文件头

用于查找读取相 ANSYS 标准文件头、几何数据头、求解数据头、求解文

关数据

件头、RST 文件头、RTH 文件头等

数据项

各类二进制文件 的数据项

节点存储表、单元存储表、数据集索引表、坐标系描 述、单元节点组应力等

由于结果文件为二进制类型，且一般分析结果文件比较大（如热力学问题分析

RTH 结果文件可达数十、数百 GB），外部开发的方式效率不高。而本文中仅需要

节点的信息（坐标、值），因此利用后处理工具，将节点数据批量导出到 xls 格式

45

电子科技大学硕士学位论文
文件中，再进行后续处理。xls 格式文件是 Excel 的表格文件格式，结果文件中节 点的坐标（X、Y、Z 轴）与节点值相对应的结构存储在 xls 文件中，如图 4-6 所示。 由于导出的 xls 不利于 pandas 的读取，因此将数据转换成 xlsx 格式文件，形成初 步的有限元仿真结果数据集。
图 4-6 导出节点数据示意图
4.2.2 多通道图像的原理
数字图像是用有限数值的像素表示的，图像的每个像素有特定的位置和整型 数值。根据像素的位深度划分为 1 位（单色）、2 位（4 色）、4 位（16 色）、8 位 （256 色）等，相应的数值范围为该位数的二进制数据的范围，每个像素的位数越 大，能表示颜色更加细腻、性能越强。如 8 位的图像的像素值共有2 （即 256）个 整型数值，能表示 256 种不同颜色。把图像分解成不同的颜色成分，每个颜色成分 为图像的一个颜色通道。图像有一个或多个颜色通道，颜色通道中存储了该颜色成 分像素的位置和数值。图像的颜色通道数量由图像模式决定，图像模式包含：位图 模式、灰度模式、RGB 模式等。位图模式、索引模式、灰度模式的图像有一个通 道，RGB 模式的图像包含三个通道。
位图模式的图像像素为黑色或白色之一，位图模式下的图像位深度为 1。灰度 模式在图像中根据位深度的不同，有不同的灰度级，如在 8 位图像中，最多有 256 级灰度，灰度图中的每一个像素的灰度值的取值范围为 0 到 255，其中 0 表示黑 色，255 表示白色。RGB 模式的图像使用 RGB 模型，RGB 模式的图像每个像素有 整数型的数值，如 8 位的 RGB 模式的图像，每个红、绿、蓝颜色分量的数值为 0 到 255。
数字图像可以用矩阵表示，图像的每个通道为一个二维矩阵，矩阵中的元素的 位置和数值表示了图像中该通道对应像素的信息。为 RGB 模式的图像的分解与合
46

第四章 基于深度学习的机床数字孪生模型物理仿真研究

成，利用 OpenCV 等开源库，可以将矩阵合成为多通道的图像，也可将图像转换为

相应的矩阵。OpenCV 在 RGB 模式下，通道顺序为 B、G、R。如图 4-7 所示，对 于通道数为 d 的m n图像，可以分解为成 d 个m n的矩阵。如灰度模式的图像

可以转换为一个二维矩阵，RGB 模式的图像中可以转换为三个二维矩阵，图像的

各种操作转换为对图像矩阵的运算。

255 0 0 255,0,0 0,255,0 0,0,255 单通道表示
255 255 0

0 255 0 255 0 255

0 0 255 0 255 255

255,255, 255,0,25 0,255,25

0

5

5

255 128 0

255 128 0 (b)

255 128 0

255,255, 128,128,

255

128

0,0,0

RGB表示

(a)

(c)

图 4-7 RGB 模式图像分解示意图。(a)RGB 图像矩阵；(b)B、G、R 通道图像矩阵； (c)RGB 图像

4.2.3 基于 OpenCV 的数据处理

OpenCV 是开源的计算机视觉和机器学习软件库，提供了计算机视觉应用程序 的基础结构。本文主要基于 OpenCV 实现数据到图像的转换，创建后续深度学习 的图像数据集。NumPy 是基于 Python 进行科学计算的第三方库，在矩阵的各种运 算中有较强的性能，在有限元仿真数据的图像化处理中用来做图像矩阵的相关运 算。pandas 是基于 Python 编程语言的开源数据分析和处理工具，最对结构化数据 的处理上有较高的效率，在本文中主要用来对导出的有限元结果数据 xlsx 文件的 数据提取。数据的图像化处理主要包含两部分，有限元分析工况参数数据和有限元 分析结果数据。有限元分析工况参数数据的图像化处理流程如图 4-8 所示。

参数组1

通道矩阵1

有限元分析 工况数据

参数组2

通道矩阵2

NUMPY 矩阵运算

OpenCV 转换

...

...

参数图像

图 4-8 有限元分析工况参数数据的图像化处理流程
首先根据有限元的分析对象和分析类型，将工况参数进行分组，确定载荷、约 束的位置和数值。然后利用 NumPy 库中的矩阵运算函数，构建相应参数组对应的
47

电子科技大学硕士学位论文

通道的矩阵。再利用 OpenCV 库中的图像创建函数，根据各通道的矩阵合成多通

道图像，从而实现有限元分析工况数据到参数图像的转换。

对于有限元分析结果数据的图像化处理，在对有限元结果数据导出后转换成

xlsx 文件，利用 pandas 对 xlsx 文件的数据做提取。根据数据的坐标点位和数值，

利用 NumPy 构建图像通道的矩阵。在构建完图像的矩阵后，通过 OpenCV 将矩阵

转换成灰度图像。灰度图虽已能够表示结果数据，为了提高可视化效果，在本文中，

利 用 OpenCV 将 灰 度 图 转 换 成 彩 色 云 图 。 OpenCV 中 的 色 度 模 式 包 含 了

COLORMAP_AUTUMN、COLORMAP_WINTER、COLORMAP_JET 等，本文中

采用了 COLORMAP_JET 色度模式，其更接近一般的有限元仿真软件的可视化效

果。结果数据图像化处理流程如图 4-9 所示。

有限元分析 结果数据

数据提取

构建矩阵

图像转换

转换云图颜 色模式

图 4-9 有限元分析结果数据图像化处理流程

由于深度学习模型训练过程中需要读取训练集中的全部图像，为了提高图像

读取的性能，利用 OpenCV 将工况参数图像和对应的结果图像做拼接。如对于两

个三通道的图像，先分别将待拼接的图像读取到两个矩阵中，再构建一个拼接后大

小的零矩阵，最后用两个待拼接图像的矩阵替换零矩阵中相应的元素。

对于如图 4-10(a)所示轴-轴承模型，包含两个轴承和一个轴，针对其进行瞬态

热力学有限元仿真，4-10(b)为其网格划分示意图，4-10(c)为该模型中轴的有限元仿

真结果。

轴承2

主轴

轴承1

（a）

（b）

（c）

图 4-10 轴-轴承模型及其有限元仿真。(a)轴-轴承模型示意图；(b)网格划分示意图； (c)轴的有限元分析结果云图

对于该轴-轴承模型，针对工况参数图像，将工况参数划分为三组：载荷、环 境温度、传热时间，每个通道的位深度为 8 位，分别用 R 通道、G 通道、B 通道表 示。为了提升图像的区分度和可视化效果，根据实际数值的阈值做归一化处理后再 分布到 0 到 255 区间。以轴的圆柱外表面展开的矩形为基础，工况参数图像化处

48

第四章 基于深度学习的机床数字孪生模型物理仿真研究
理如图 4-11 所示。

（a）

（b）

（c）

（d）

图 4-11 工况数据图像化处理。(a)轴承热流量、传热系数通道的图像；(b)环境温度通 道的图像；(c)时间通道的图像；(d)为三个通道融合后的图像

对于上述轴-轴承模型有限元分析的结果图像，在读取有限元分析结果数据后 转换成 xlsx 文件，再根据节点位置和数值构建通道矩阵，然后转换成位深度为 8 位的单通道图像（灰度图），再使用 OpenCV 的 COLORMAP_JET 色度模式将灰度 图转换成云图形式的伪彩色。以轴外表面的展开矩形为基础，处理有限元分析结果 数据如图 4-12 所示。在分别图像化处理工况数据和有限元分析结果数据后，进行 图像的合并，从而形成用于训练的图像数据集，如图 4-13 所示，每张合并图像的 左部为工况参数图像，右部为结果图像。由于一般仿真后处理软件、红外热成像仪 在单个结果云图显示时，色度条表示的值域为单个结果的最小值到最大值，而本文 中值域为取整后数据集的最小值和最大值，因此在结果图像呈现上有一定的区别。

图 4-12 图像化处理后轴-轴承模型的结果图像
图 4-13 合并后的数据集部分图像
49

电子科技大学硕士学位论文

4.3 仿真数据回归计算模型

由于数字孪生模型中对物理规则的计算速度有一定的要求，而现有可行的仿

真计算方法基本可以满足除了计算速度之外的要求，因此利用一定量的有限元分

析数据和回归计算模型的方法可以加速仿真计算结果数据的生成速度。仿真数据

回归计算的流程如图 4-14 所示，分为模型训练和模型求解两个过程。在模型训练

中，首先对部分有限元工况数据进行有限元求解，从而得到有限元分析的结果数据，

再对工况数据和结果数据进行图像化处理，最后利用图像化数据训练深度学习模

型，从而得到该物理规则的回归计算模型。在模型使用中，将工况数据做图像化处

理，再利用训练好的回归计算模型，从而得到大量的回归计算结果数据。

部分有限元分析 工况数据

有限元求解

部分有限元分析 结果数据

模型训练

工况数据 图像化数据

部分结果数据 图像化数据

模型使用

有限元分析 工况数据

回归计算模型

回归计算 结果数据

图 4-14 仿真数据回归计算流程

4.3.1 回归计算模型的建立
在本文中，模型的输入为工况参数图像，模型的输出为仿真结果图像，回归计 算模型是基于 cGAN（Conditional Generative Adversarial Nets，条件生成对抗网络） 的深度学习模型。cGAN 是 GAN（Generative Adversarial Nets，生成对抗网络）的 一种改进，GAN 是包含生成器和判别器的框架，生成器用于利用输入数据生成输 出数据，判别器用于评估生成模型的训练结果，生成器的目标是生成判别器判别不 了的结果，判别器的目标是尽可能判别出生成结果和真实数据，随着训练过程的进 行，生成器和判别器相互对抗、此消彼长，从而能够得生成效果很好的生成器和判 别器[54]。如图 4-15 所示，第一代的生成器只能生成效果很差的图像，而第一代的 判别器能很好的区分真实图像的生成的图像；第十代的生成器能生成好一些的图 像，让之前的判别器难以区分生成图像与真实图像，然后会训练出一个更好的判别 器，此判别器能准确识别生成图像与真实图像。随着训练过程的不断进行，最终得 到效果很好的生成器和判别器。

50

第四章 基于深度学习的机床数字孪生模型物理仿真研究

生成器 Epoch 1

生成器 Epoch 10

生成器 Epoch 50

生成图像

判别器 Epoch 1

判别器 Epoch 10

判别器 Epoch 50

真实图像

图 4-15 GAN 的训练过程

4.3.1.1GAN 基本原理

在统计学习中，事物是从分布抽样中产生的[55]。如在本文中，用

代

表某对象的具体物理规则的有限元分析结果图像的分布， , ,…, 是

的样本。由于实际中无法获取全部的

，因此用 ; 近似

。而获得

的关键找出参数 ，根据极大似然估计， 即为：

∗ arg max ∏

;

arg max ∑ log

;

arg max ~

log ;

用样本均值代替期望，将上式展开。

(4-1)

∗

g

;

arg max

log ; log

arg min

log

;

arg min

∥;

(4-2)

相对熵（Kullback–Leibler divergence）描述了两个概率分布之间的差异，在上

式中，参数 ∗能让 ; 能够满足近似

，即相对熵最小的 。用一个含有

参数 的分布 ; 去近似真实分布

，用相对熵来评价近似的效果。为了

能获得最佳的近似效果，需要参数 让 ; ∗ 更接近

。

本文 4.1.2 中已分析，根据通用近似定理，可以用神经网络来近似复杂的函数，

对于分布也是一样。如图 4-16 所示，生成分布 ; ∗ 表示成：

(4-3)

51

电子科技大学硕士学位论文

噪声 z

G(z)= x
生成器 θ

生成分布

真实分布

损失

x

图 4-16 噪声输入生成器示意图[54]

其中 z 为输入的噪声，预设的分布

，

为示性函数，其中：

1, 0,

(4-4)

因此，利用极大似然估计难以计算，需要利用 GAN 模型来解决。

在 GAN 模型中，生成器 G 表示一个函数，其输入为 ，输出为 ；判别器 D 表

示一个函数，输入为 x，输出为标量。GAN 的价值函数为：

V G, D

∼

最优的生成器为：

∼

1

(4-5)

∗

min max ,

(4-6)

在给定 G 的条件下，要确定一个恰当的 D 使得价值函数V G, D 取得最大值， 即：

∼
log

∼

1

log 1

log

log 1

(4-7)

对于上式，利用微元思想，上式的最大值等于每个微元最大值的累加，因此微

元取最大值的位置与整个积分取最大值的位置一样。对于给定的 ，上式中的积分

项是最大的，即

log

log 1

最大。在 G、 给定下，

、 可作为常数项，令

，令

，得：

f

a

1

(4-8)

求上式极值点，即：

1

1

1

从而得到最优的 ∗为：

10

52

第四章 基于深度学习的机床数字孪生模型物理仿真研究
∗

将 ∗带入 V G, D 得：

V G, D

∼

∼ log 1

∼

∼ log

log

(4-9)

2 log 2

/2

/2

2log2 KL

x ||

x

x

2

||

2

2log2 2

||

(4-10)

其中，JSD（Jensen-Shannon divergence）取值范围为 0, log 2 ，当两个分布重 合的时候 JSD 取 0。因此，可以基于 GAN 衡量分布的差异，根据上式调节 G 的参 数从而最小化差异的分布。在实际训练过程中，先固定 G 的参数，用梯度下降算 法更新 D 的参数，再固定 D 的参数，用梯度下降更新 G，然后重复该过程，直到 达到预期的训练效果。

4.3.1.2 cGAN 模型
理论上基于 GAN 可以完全逼近真实数据，但是由于不需要预先建模，有比较 大的自由度，而在实际训练过程中，对于较复杂的数据训练比较困难。cGAN 是 GAN 的一种扩展，其基本思想是在生成器和判别器引入条件变量，以约束数据的 生成[56]。在 cGAN 中，通过将条件信息 y 输入到判别器和生成器，作为输入层的 一部分，如图 4-17 所示。

53

电子科技大学硕士学位论文

真实数据x

判别器D

判断结果

噪声z

生成器G

生成数据G(z)

(a)

条件信息y

真实数据x

判别器D

判断结果

噪声z

生成器G

生成数据 G(z|y)

(b)

图 4-17 GAN 与 cGAN 结构示意图。(a)GAN 模型结构；(b)cGAN 模型结构

cGAN 的价值函数为：

,

∼

|

∼

1

cGAN 的目标函数为：

∗ arg min max ,

|

(4-11)

(4-12)

4.3.2 对 cGAN 的调整

在 GAN 中生成器 G 和判别器 D 是相互对抗的关系，生成器 G 的目标是生成

出判别器 D 难以判别的图像，而在实际应用场景下，目标是生成更接近真实图像

的生成图像。已有的相关研究表明，将目标函数与损失函数结合的方法能提升训练

的效果[57,58]。广泛应用的损失函数函数包含 L1 loss、L2 loss 等， L1 loss 是目标值

和生成值 的差值的绝对值之和，即：

∑|

|

(4-13)

L2 loss 是目标值 和生成值 的差值的平方之和，即：

∑

(4-14)

在本文中，对 cGAN 的目标函数做了调整，为了减少图像模糊和细节丢失， 分别引入了 L1 loss 和 L2 loss，目标函数为：

∗ arg min max ,

(4-15)

54

第四章 基于深度学习的机床数字孪生模型物理仿真研究
上式中， 和 分别为 L1 loss 和 L2 loss 的权重值。

4.3.3 基于 TensorFlow 的实现

TensorFlow 是一个用于数值计算的软件库，在人工智能方面有广泛的应用，本

文中的 cGAN 模型是基于 TensorFlow 实现的。cGAN 的模型分为两部分，生成器

和判别器。生成器的实现基于 U-Net，结构如图 4-18 所示。参数图像输入到生成

器中经过多次编码器处理，然后再经过解码器处理，输出生成图像。编码器中，图

像输入后经过卷积（convolution）、归一化（batch norm）、激活函数（ReLU）后输

出。在解码器中，图像输入后经过反卷积（deconvolution）、归一化（batch norm）、

激活函数（ReLU）后输出。以 256*256 的 3 通道图像为例，经过 8 次编码器处理

后成为 1*1 的 512 通道的图像，再经过 8 次解码器处理，输出和输入图像一样大

小的 256*256 的三通道图像。

128*128*64

32*32*256

8*8*512

256*256*3

64*64*128

16*16*512

4*4*512 2*2*512

输入

编码器 编码器 编码器 编码器 编码器 编码器 编码器 编码器

1*1*512

解码器 解码器 解码器 解码器 解码器 解码器 解码器 解码器 输出 256*256*3 128*128*64 64*64*128 32*32*256 16*16*512 8*8*512 4*4*512 2*2*512

图 4-18 生成器结构示意图

判别器的结构如图 4-19 所示，生成图像（256*256*3）和真实图像（256*256*3） 经过连接处理后，再用编码器进行处理，最终输出为 30*30*1 的图像，其中每个像 素值的取值范围 0,1 ，表示了生成图像对应区域的置信度。

输入

256*256*6 128*128*64 64*64*128 32*32*256 31*31*512 30*30*1

256*256*3

判别

256*256*3 连接器 编码器 编码器 编码器 编码器 编码器 结果

待判 别

图 4-19 判别器结构示意图

4.4 VMC0656e 机床主轴系统瞬态热力学规则融合的实现
针对前文的物理规则融合方法，本文对沈阳中捷机床的 VMC0656e 五轴机床 的主轴系统的瞬态热力学规则进行实现。在机床加工过程中，热误差是影响机床加
55

电子科技大学硕士学位论文
工质量的重要因素，因此对于机床加工过程的监控，机床的温度至关重要。如图 420 所示，对于 VMC0656e 摇篮式五轴机床，主轴系统的温度由于运动关系、支撑 结构的原因，在加工过程中进行测量比较困难。因此，本文基于 VMC0656e 五轴 机床的数字孪生模型，实现机床主轴系统的热力学物理规则的融合。
图 4-20 VMC0656e 机床结构示意图
4.4.1 机床主轴系统有限元仿真
4.4.1.1 主轴系统有限元仿真模型 VMC0656e 机床主轴系统三维结构如图 4-21 所示，本文中的机床型号为机械
主轴，利用三维建模软件建模后以 STP 格式导入到有限元分析软件中。
x轴 外覆盖件 主轴电机
z轴 机械主轴
图 4-21 主轴系统结构图
为保证有限元分析的效率，对模型的部分细节（覆盖件螺栓孔、螺钉、倒角） 做了优化，避免不必要的过密网格。在本文中，取材料属性为常数，包含导热系数
、对流系数 、密度ρ、比热容C。
56

第四章 基于深度学习的机床数字孪生模型物理仿真研究

（1）载荷计算 载荷部分主要热源为轴承和电机，轴承的热流量的计算如下：

H 1.047 M

10

(4-16)

上式中， 为轴承转速，M 为摩擦力矩，为载荷摩擦力矩（M ）和黏性摩擦 力矩(M )之和。M 的计算利用下式进行：

M Fd

(4-17)

其中， 为系数，与载荷和轴承类型相关；F 为摩擦力矩的载荷；d 为轴承的

中径。M 的计算与润滑剂的运动黏度 和轴承转速有关：

当

3.33 10

/：

M 160

10

(4-18)

当

3.33 10

/：

M

10

(4-19)

其中， 为系数，与润滑方式和轴承类型有关。 电机的热流量为：

(4-20)

上式中， 为输出力矩， 为电机转速， 为电机效率。 （2）传热系数计算 主轴系统的传热主要包含三种形式，热传导、热对流、热辐射，热传导主要是 根据主轴系统内各部件的装配关系进行，热对流是主轴的油冷系统的冷却液和套 筒之间传热，热辐射是主轴系统内各部件之间以热辐射的形式换热。 热对流的传热系数计算根据努谢尔特准则：

α

(4-21)

其中， 为对流时圆柱表面的直径； 为努谢尔特数，管长和管径之比小于 60

时，其计算如下：

0.023 . .

120

(4-22)

0.7

120

上式中， 为雷诺数， 为冷却液的流速， 为管道的当量直径， 为冷却液的 运动黏度， 为普朗特数。热辐射的传热系数计算如下：

57

电子科技大学硕士学位论文

5.7

4 6 10

(4-23)

其中，ε为系统黑度值； 为主轴表面温度； 为环境温度； 为温度变化率。

4.4.1.2 仿真结果与实验对比
仿真计算设备配置：操作系统 win10，CPU 为 i5-4200u，内存 8G。为验证仿 真数据的正确性，以 VMC0656e 主轴系统为对象，进行了瞬态热力学仿真。对比 了仿真结果数据与实验数据，温度的测量采用 FILR T600 红外热成像仪。在主轴系 统中，电机和轴承是主要热源，在机床运行 10800s 时，主轴系统主轴电机位置的 红外热成像仪测量结果与有限元仿真结果如图 4-22 所示。其中，室内温度 18.4℃， 主轴转速 5000 转/分。对比了 7 个节点的温度，7 个节点温度值的平均绝对误差为 1.05，7 个节点温度值的仿真结果与实验结果的平均相对误差为 1.91%。

(a)

(b)

(c)

图 4-22 电机仿真结果与实验结果。(a)实际主轴电机；(b)测量结果；(c)仿真结果

在实验中，用红外热成像仪记录机床工作台位置的主轴系统上部覆盖件、下部 覆盖件、机械主轴下端外套的温度，如图 4-23（a）所示。实验过程中，从主轴开

58

第四章 基于深度学习的机床数字孪生模型物理仿真研究
始旋转后第 1 分钟开始记录，红外热成像仪记录的最高温度和该部分在有限元仿 真分析中的最高温度的温升曲线如图 4-23（b）、4-23（c）、4-23（d）所示，其中 423（b）室内温度为 24.2℃、主轴转速 3000 转/分，4-23（c）室内温度为 18.9℃、 主轴转速 4000 转/分，4-23（d）室内温度为 18.4℃、主轴转速 5000 转/分。

上部 覆盖件

下部 覆盖件

主轴下端外套

(a)

(b)

(c)

(d)

图 4-23 仿真结果与实验结果。(a)热成像仪结果示意图；(b) 室内温度为 24.2℃、主 轴转速 3000 转/分下最高温度的温升曲线；(c）室内温度 18.9℃、主轴转速 4000 转/分下最高温度的温升曲线；(d）室内温度 18.4℃、主轴转速 5000 转 /分下最高温度的温升曲线

三次实验中，测量的最高温度为 28.1℃、22.9℃、22.7℃，有限元仿真的最高 温度为 27.67℃、22.57℃、22.35℃，仿真数据与测量数据的绝对误差分别为 0.43℃、 0.33℃、0.35℃，对于测量温度的相对误差分别为 1.53%、1.44%和 1.54%。测量的

59

电子科技大学硕士学位论文
最高温度的温升分别为 3.2℃、3.3℃、3.8℃，仿真的最高温度的温升分别为 3.27℃、 3.42℃、3.88℃，绝对误差为 0.07℃、0.12℃、0.08℃，对于实验结果的相对误差为 分别为 2.19%、3.64%、2.11%。两次实验中，仿真数据和实验数据的整体变化趋势 保持一致，考虑到实际中存在一定的影响因素，仿真结果和实际实验结果可以认为 基本吻合，仿真结果的误差处于工程上可以接受的范围。
4.4.2 数据集的处理
本文对 125 组工况数据进行了分析，每组工况数据进行瞬态热力学仿真的传 热时间 10800s。在数据集的制作中，首先分别生成工况参数图像和结果图像，再 将两个图像进行合并。对于参数图像划分为载荷、环境温度、时间三个通道，将参 数数值和参数位置对应到图像矩阵的元素，再利用 4.2.3 节中提到的方法转换为 RGB 模式的工况参数图像，如图 4-24 所示。以主轴系统正面投影为基础，载荷组 用 B 通道表示、环境温度组使用 G 通道表示、时间组用 R 通道表示。其中载荷数 据为每组有限元分析中的轴承热流量和电机热流量，分别取了 5 组电机热流量参 数、5 组轴承热流量参数、5 组环境温度参数，共计 125 组工况数据，瞬态热力学 分析时间为 10800s。

主轴 系统

B通道

G通道

R通道

合成 图像

图 4-24 瞬态热力学分析工况参数图像化处理

对于分析结果文件，在数据导出后，将每组工况的数据每隔 300s 输出到 xlsx 文件，再提取出数据制作图像矩阵，然后转换成图像。导出了覆盖件表面 3102 个 节点的节点编号、XYZ 坐标、节点温度值，形成 65 行 46 列的矩阵，最终转换成 325*230 的图像。为了便于提升处理效率和可视化效果，先用 8 位单通道（灰度图） 表示，再利用 OpenCV 的 COLORMAP_JET 色彩模式转换成云图类型的伪彩色。 经过数据的图像化处理，从而形成工况参数-主轴系统上部覆盖件表面温度分布的 初步图像数据集。主轴系统上部覆盖件表面数据的图像化处理如图 4-25 所示。

60

第四章 基于深度学习的机床数字孪生模型物理仿真研究

有限元分析 结果数据

数据提取

构建矩阵后 转换灰度图

转换云图颜 色模式

图 4-25 瞬态热力学分析结果数据图像化处理
由于本文中的使用 cGAN 模型，为提高数据集的读取性能，按照 4.2.3 中提到 的方法将参数图像于结果图像做拼接处理，拼接后的图像作为数据集的元素。在 125 组工况的有限元分析结果中，每组工况制作了 36 张工况参数图像和 36 张对应 的结果图像，共制作了 4500 张参数图像和 4500 张主轴系统上部覆盖件温度结果 图像，最终形成 4500 张规模的数据集，如图 4-26 所示。

图 4-26 工况-结果图像数据集
4.4.3 回归计算模型的训练
训练的设备配置：操作系统 ubuntu16.04，CPU 为 corei7，GPU 为 Nvidia Geforce GTX1080Ti，CUDA 版本 10.0，TensorFlow 版本 tensorflow_gpu-1.14.0，Python 版 本 3.6。随机选取了数据集中 80%的图像作为训练集，余下 20%作为验证集，训练
61

电子科技大学硕士学位论文

集有 3600 张工况参数图像和 3600 张结果图像，验证集有 900 张工况参数图像、 900 张结果图像。读取数据集的图像后，将工况参数图像和结果图像都转换成大小 为 256*256 的图像。
训练过程的回归评估指标包含平均绝对误差（Mean Absolute Error，MAE）、 均方误差（Mean Square Error，MSE）、决定系数（R-Square，R2）、校正决定系数 （Adjusted R-Square），在本文中选取了 MAE、MSE、 作为评价指标，其中：

∑|

|

(4-24)

1

∑ ∑

∑

1

∑ ∑

/ /

1

,

(4-25) (4-26)

其中， 表示真实值， 表示预测值， 表示均值。MSE 和 MAE 量化了真实图

像于预测图像的差距，决定系数 评价了模型的拟合效果， 的取值范围为

0,1 ,

0时表示模型的拟合效果很差， 1时表示模型的拟合效果非常好。

由于训练模型基于 TensorFlow 实现，因此训练过程的可视化借助其可视化工

具 TensorBoard。为了使模型达到较好的效果，通过调整 4 个对结果影响较大的参

数：初始学习率、L1 loss 权重、L2 loss 权重、Adam 优化器 betal。针对上述四个

因素取了三个水平，进行了 29 组训练调参，每组参数迭代 28k 次。经过调参后，

本文中最终的训练参数设置为：初始学习率为 0.0002，L1 loss 的权重为 50，L2 loss

的权重为 95，Adam 优化器 betal 参数为 0.63。利用训练集和验证集的分别进行训

练，在迭代 4 万次过程中，该参数下模型未出现发散，如图 4-27 所示。为了便于

观察变化趋势，图中的平滑曲线为原始数据经过 TensorBoard 平滑处理后的曲线。

训练 集

验证集

训练 集

验证 集

MSE

迭代次数

迭代 次数

（a)

（b)

图 4-27 训练集和验证集的 和 MSE。(a)训练集和验证集 随迭代次数变化曲线； (b)训练集和验证集 MSE 随迭代次数变化曲线

62

第四章 基于深度学习的机床数字孪生模型物理仿真研究

在该组参数下，模型训练达到 10k 次之后，像素点的平均绝对误差基本保持在 0.15 之下，像素点的均方误差基本保持在 0.02 之下，生成图像和真实图像的误差 比较小。校正决定系数保持在 0.96 之上（最高达到 0.986），模型在回归计算中达 到了良好的效果。训练完成后，模型的部分生成结果如图 4-28 所示，参数图像为 仿真工况参数图像化处理后的图像，目标图像为仿真结果数据图像化处理后的图 像，生成图像为利用训练好的 cGAN 模型根据参数图像生成的图像。

参数 图像

目标 图像

生成 图像

参数 图像

目标 图像

生成 图像

图 4-28 利用训练好的 cGAN 模型生成的部分图像示意图
4.4.4 求解性能对比
工况参数利用 Python 脚本转换成工况参数图像，物理规则用了 cGAN 模型替 代，在求解时先将工况参数转换成图像，调用训练好的 cGAN 模型生成结果图像。 由于减少了大量的有限元分析过程的步骤，结果的生成速度比有限元仿真软件的 计算速度有了极大的提升。在数据量方面，利用有限元仿真软件进行仿真计算，每 组工况下生了很多的计算数据（本文中每组工况的仿真数据大小为 Gb）；而在本文 的方法中，cGAN 模型训练后参数的大小 660Mb 左右，生成的结果图像为 kb 级大 小。本文对比了 5 组仿真参数（参数与数据集中参数不重复）的有限元仿真时间， 对比了将该参数转换成图像后用本文训练的 cGAN 模型生成图像与仿真结果误差 以及平均生成时间。其中，有限元瞬态热力学分析计算传热时间都为 10800 秒， cGAN 平均生成时间是生成 25 张该热流量、传热系数、环境温度下不同时间图像 的平均时间。计算了每组参数下的 cGAN 计算结果和有限元软件结果的 MSE。操 作系统 win10，CPU 为 i5-4200u，内存 8G，显卡为 Nvidia GT755M。5 次实验中有 限元仿真计算平均时间 1926.8 s，瞬态热力学计算的文件(.rth 格式文件)的大小为
63

电子科技大学硕士学位论文
4.13 GB。cGAN 模型参数文件大小 0.66 GB 左右，每张图像的平均生成时间 0.23 s 左右。图像的均方误差为 0.0105，相对于仿真数据图像有良好的精度。5 次实验 的结果如表 4-2 所示，本文方法相比于直接利用有限元仿真计算的方法在较小的误 差下，极大的提高了结果的计算速度。

表 4-2 cGAN 结果生成与有限元分析对比

序号 1 2 3 4 5

有限元分析时间（s） 1949 s 1907 s 1933 s 1929 s 1916 s

.rth 文件大小(GB) 4.13 4.13 4.13 4.13 4.13

cGAN 平均生成时间(s) 0.19 0.25 0.21 0.27 0.24

MSE 0.0104 0.0097 0.0113 0.0107 0.0102

4.5 本章小结
本章研究了基于深度学习模型的机床物理规则融合方法，以实现基于机床数 字孪生物理规则的虚拟监控。首先分析了物理规则融合的整体思路，基于仿真数据 回归计算建模的物理规则抽象，和基于深度学习模型的物理规则封装。然后根据多 通道图像的原理，对仿真数据的图像化处理方法做了分析和实现。对回归计算模型 建模，对 cGAN 模型的原理进行分析并引入损失函数做了调整，并基于 TensorFlow 做了实现。最后对 VMC0656e 机床主轴系统瞬态热力学规则融合做了实现，制作 了 4500 张规模的数据集。通过 29 组参数训练模型，确定了最佳的参数组合，使得 模型达到良好的训练效果。最后通过测试验证了本文方法相比于有限元仿真方法 在减少求解时间和数据规模方面的性能提升。

64

第五章 虚拟监控系统集成及测试

第五章 虚拟监控系统集成及测试

机床加工过程虚拟监控系统主要基于数字孪生模型实现机床的虚拟监控，一 方面利用物理设备到数字孪生模型的多源异构数据映射实现可视化监控，另一方 面利用设备数字孪生模型物理规则融合实现快速仿真计算。本章首先对多源异构 数据映射和物理规则融合进行集成，以及开发环境搭建、系统运行流程分析、系统 界面开发；然后进行系统的功能测试和性能测试，并进行分析；最后对沈阳中捷 VMC0656e 五轴机床进行实例测试，并对虚拟监控系统各项指标进行分析。

5.1 虚拟监控系统集成
5.1.1 虚拟监控系统开发环境
由于监控系统涉及到大量的开发，因此在开发中使用了大量的开源工具，开发 环境如表 5-1 所示。监控系统主要在 windows 环境（Win10）下进行开发，由于开 源工具在 windows 环境下的兼容性存在一定的问题，因此深度学习模型的训练在 Linux 环境（Ubantu16）下进行。可视化监控部分的开发主要使用 C#语言，数据处 理、深度学习使用 Python 语言，机床数据管理系统使用 Java 语言开发。可视化开 发工具使用 Unity3D，其中图形库使用 OpenGL。Redis 缓存和 RabbitMQ 作为系统 的运行服务，监控系统客户端在 Unity3D 中开发测试完成后，由 Unity3D 进行发 布。

工具项 操作系统 编程语言
IDE 缓存服务 消息队列服务
主要开源工具
可视化开发工具

表 5-1 虚拟监控系统开发环境
描述 Win10、Ubuntu16 C#、Java、Python3.6 Visual Studio、IntelliJ IDEA、PyCharm
Redis 4.0.2 RabbitMQ3.6.14 TensorFlow、Numpy、pandas、OpenCV、Springboot、 Bootstrap、SpringSecurity、MyBatis、ElasticSearch、 Thymeleaf、Gradle Unity3D（图形库为 OpenGL）
65

电子科技大学硕士学位论文
5.1.2 虚拟监控系统运行流程
系统开始

数据链路建立

数据采集

数

据 异

数据集成

步

传

输

Redis缓存

系统初始化 组件加载 数据解析 数据处理

工况数据图像化 处理
调用训练完成 cGAN模型
生成工况数据对 应的结果图像
结果图像处理

RabbitMQ消息队 列
数据持久化
数据交互请求
场景漫游数据
三维交互操作

更新可视化 组件属性

更新三维模 型信息

场景剔除

渲染输出

加工状态

NO

是否正常

YES

更新显示

数据映射
cGAN模型训练、 参数调优
有限元数据 图像化处理
物理规则 有限元仿真 物理规则融合
记录异常信息 触发相应控制

可视化监控

NO

是否

YES

结束监控

结束 物理状态计算

图 5-1 虚拟监控系统运行流程

虚拟监控系统的运行流程如图 5-1 所示，虚拟监控系统运行时，首先进行系统 初始化，然后加载系统的组件。建立网络连接，进行多源异构数据的采集，然后进 行数据的集成，再传输到 Redis 缓存服务器中，状态数据的可视化监控从 Redis 缓 存服务器获取数据。数据的交互的请求先进入 RabbitMQ 消息队列，再到 Redis 缓

66

第五章 虚拟监控系统集成及测试
存中查询数据，失败则转到数据库。数据的持久化也通过 RabbitMQ 消息队列完成。 在利用工况数据求出物理规则的结果的过程中，首先将工况参数做图像化处理，再 使用训练好的 cGAN 模型生成物理规则的结果图像，再将图像加载到三维几何模 型中。在可视化监控中，数据经过解析、处理后分别更新可视化组件属性和三维几 何模型信息。对于三维场景，根据获取的漫游数据进行场景的剔除，再进行渲染输 出。在虚拟监控系统发现异常时，进行异常信息的记录以及触发相应的控制操作。
5.1.3 虚拟监控系统用户界面开发
机床虚拟监控系统的用户界面是监控系统与操作人员交互的窗口，应该有比 较全面的必要监控信息，同时还要有良好三维沉浸效果，此外还要兼顾实用性、流 畅性。机床虚拟监控系统的用户界面开发采用 Unity3D 的 UGUI，本文 3.5.1 中的 部分可视化映射也基于 UGUI 进行开发。本文开发的机床虚拟监控系统用户界面 如图 5-2 所示。

（a)

（b)

机床 状态参 数 三维 部分

系统 参数

（c)

加工信息 三维漫游导航地图 （d)

图 5-2 虚拟监控系统界面。(a)系统初始页；(b)数据管理平台 Web 界面；(c)系统主界 面；(d)三维漫游界面

由于可视化监控系统与数据管理平台采用了不同的开发方式，因此系统集成 时通过初始页进入各模块，虚拟监控系统的初始页提供了数据管理平台、可视化监 控系统的入口。数据管理平台在本文 3.2.3 中已经提到，不再赘述。由于采用了

67

电子科技大学硕士学位论文
Unity3D 工具进行可视化监控界面的开发，因此后期针对业务需求，可通过 Unity3D 进行灵活的界面再配置，调试完成后发布软件即可。可视化监控系统以二维和三维 混合的方式进行呈现，其中三维部分具有场景三维漫游和虚拟交互的功能，数据的 可视化映射在 3.5.1 节中已经提到。用户可以在可视化监控系统中三维漫游的方式 查看机床的加工过程，也可以通过数据可视化的方式查看加工过程的机床状态信 息。
5.2 虚拟监控系统客户端测试 5.2.1 虚拟监控系统客户端整体性能测试
对于虚拟监控系统，需要保证在对数控机床加工过程的监控中有良好的整体 性能。虚拟监控系统的整体性能测试是通过检测工具，以 CPU 利用率、内存占用 率、GPU 利用率等为指标，测试虚拟监控系统客户端运行中使用的计算机资源。 对于 CPU 占用率，一般通过标准为小于 85%；对于内存占用率，一般通过标准为 小于 80%。在本文中，使用 Windows10 系统的资源监视器进行虚拟监控系统客户 端整体性能测试，利用资源监视器进行虚拟监控系统的整体性能测试如图 5-3 所 示。
图 5-3 资源监视器的性能监测过程示意图
对虚拟监控系统客户端进行了 2h 的整体性能测试，客户端计算机的配置如下： CPU 为 Intel Core i5-4200M 2.5GHz，内存为 8GB 1600MHz，显卡为 GT755M。在
68

第五章 虚拟监控系统集成及测试

测试时间段内，虚拟监控系统的 CPU 利用率平均值为 19%，虚拟监控系统的内存 占用大小为 244.7MB，GPU 占用率的平均值为 73%。由于虚拟监控系统较为复杂， 涉及到大量的运算，但 CPU 的利用率仍小于 85%的测试要求。虚拟监控系统对计 算机内存的占用较少，远小于 80%的要求。由于场景涉及到大量的二维和三维的 图形图像渲染，因此有较高的 GPU 占用率。综上所述，虚拟监控系统的运行过程 中对计算机资源的使用情况整体不高，因此对运行虚拟监控系统的计算机硬件水 平的要求不高，一般配置的 PC 即可满足虚拟监控系统客户端的运行。

5.2.2 虚拟监控系统客户端显示性能测试

由于虚拟监控系统中采用二维和三维混合的方式，为提高显示性能需要进行

性能的优化，本文使用 3.5.2 节所述的优化方法进行了显示性能的优化。通过使用

Unity3D 引擎的性能分析工具，测试了监控系统运行过程中三维场景漫游的优化前

和优化后的系统帧数。要保证流畅度要求，需要保证帧数不低于 30 帧。由于系统

运行帧数与场景灯光、贴图、材质等因素相关，为了测试优化的效果，采用同一种

机床模型，通过增加场景中机床的数量，以测量系统运行帧数。在本文中，以沈阳

中捷 VMC0656e 机床三维模型为对象，在三维场景中初始设置了 5 台机床模型，

以 5 台为增量进行添加，直到 50 台，分别对比了有优化和无优化时系统的运行帧

数。如图 5-4 所示，未使用场景剔除下，测试电脑在场景中机床数量达到 25 台时

系统的帧数已不能达到流畅显示要求。而使用场景剔除下，测试电脑在场景中机床

数量达到 50 台时系统的帧数才不满足流畅显示要求。通过场景剔除优化后，显示

的帧数有明显的提升。

帧数 300 270 240 210 180 150 120
90 60 30
0 5

场景剔除

无

10

15

20

25

30

35

40

45

5

0

机床 台数

图 5-4 系统帧数测试

69

电子科技大学硕士学位论文
5.3 VMC0656e 机床虚拟监控系统实例
5.3.1 运行环境搭建
为验证本文基于数字孪生的机床加工过程虚拟监控系统，以沈阳中捷 VMC0656e 五轴机床为对象，进行了实例验证。本文根据表 5-1 所列举的工具项搭 建虚拟监控系统的开发环境，进而实现基于数字孪生的机床加工过程虚拟监控系 统。为了验证虚拟监控系统的各项性能是否满足系统设计需求，搭建虚拟监控系统 的测试环境，实验主要设备包含两台 PC、VMC0656e，两台 PC 分别作为客户端和 服务器，如表 5-2 所示。

表 5-2 主要实验设备

设备项

用途

配置

CPU Intel Core i5-4200M 2.5GHz，内存 8GB

PC1

服务器

1600MHz，显卡 GT755M

CPU AMD Ryzen 5 3600 3.59GHz，内存 8GB

PC2

客户端

3200MHz，显卡 AMD Radeon RX 580 4GB

VMC0656e

数控机床

数控系统 840D SL

红外热成像仪

温度测量

FILR T600（精度：25°C 标称温度时，精度为±2° C 或读数的 2%，测温范围–40°C 至+150°C）

在实际生产环境中，服务器和机床位于生产车间，客户端位于远程监控室。为

了便于实验测试，将实验设备都置于实验室中，实验硬件平台搭建如图 5-5 所示。

PC2 VMC0656e 数控 机床

FLIR T600 红外 成像仪
PC1

图 5-5 实验硬件平台搭建
70

第五章 虚拟监控系统集成及测试
虚拟监控系统的网络架构按照图 2-3 所示的网络架构进行搭建，其中系统服 务、Redis 服务、RabbitMQ 消息队列服务、数据持久化服务均在服务器（PC1）中 运行，设备的网络连接通过交换机在局域网内进行。服务器（PC1）负责多源异构 模拟数据的生成以及数据的集成、传输、存储，以及数据管理平台后端的运行，客 户端读取数据后处理、可视化映射以及基于物理规则的结果生成与渲染显示。
5.3.2 系统实例运行与分析
根据系统的设计需求，基于数控机床的数字孪生模型能够实现对机床加工过 程的监控。加工过程中的监控主要分为两部分，一部分为基于实时数据的监控，数 据来自数控系统、外部传感器或辅助设备，这部分数据的采集相对容易，通过硬件 和软件能够实现采集，客户端获取数据从而实现可视化监控；另一部分为基于数字 孪生物理规则的监控，数据来自机床数字孪生的物理规则的计算计算结果数据，这 部分数据由于存在数据采集的困难，如由于装配关系、安全性要求、传感器布置环 境等的限制，不能很好的采集出数据，因此基于机床数字孪生的物理规则实现监控。
虚拟监控系统的流畅性不仅与系统本身渲染相关，还与数据的实时性相关。本 文 3.2 节中阐述了数据的统一表达和数据集成算法，数据集成后的部分 Json 格式 的集成数据数据如图 5-6 所示。
图 5-6 集成后的 Json 数据
本文 3.3 节中已经提到数据的传输方式，在本文虚拟监控系统中实时数据采用 异步的方式进行传输，可视化监控系统的数据来自 Redis 缓存。本文对虚拟监控系 统的网络传输延迟进行了对比，通过客户端获取当前本地时间再发送信息给服务 器，服务器收到后立即回复，客户端收到回复后再获取当前本地时间，先计算网络 总延时，再计算单次的网络延时。在网络延时测试中，分别使用 1、2、4、8、16 个客户端对服务器数据访问，测试结果如表 5-3 所示。在局域网中，延时小于 5ms 表示有良好的实时性能。在测试结果中，数据访问的延时小于 4ms 的比例为 99.99%， 因此虚拟监控系统具有较好的实时性。在对基于多源异构数据的监控中，监控过程 中虚拟监控系统运行平稳，流畅性良好。
71

电子科技大学硕士学位论文

表 5-3 数据访问延时测试结果

延时<= 1ms 延时<= 2ms 延时<= 4ms 延时<= 8ms

客户端数量

QPS

比例

比例

比例

比例

1

6325

99.96%

99.98%

99.99%

100%

2

12398

99.94%

99.97%

99.99%

100%

4

23879

99.97%

99.98%

99.99%

100%

8

37227

99.96%

99.98%

99.99%

100%

16

68583

99.93%

99.96%

99.99%

100%

在基于数字孪生模型物理规则的虚拟监控中，对基于数字孪生模型物理规则

的生成结果与实际数据进行了对比。由于机床主轴系统结构复杂，还有机床工作过

程安全性等因素影响，实验条件下不利于内部温度场的测量，而主轴温度场的变化

是整体性的，局部的温度数据变化能够反映出整体温度动态。在测试中设定主轴转

速，在无外载荷情况下工作，通过红外热成像仪测量主轴外覆盖件的温度，得到其

温度云图图像。在 4.4 节中，已实现了 VMC0656e 机床数字孪生模型与主轴系统

瞬态热力学分析的融合，根据工况条件生成结果图像后，采用本文 3.5.1 节中的可

视化映射方法实现结果与红外热成像仪测量结果如图 5-7 所示。图 5-7（a）为室内

温度 18.4℃、主轴转速 5000 转/分、在无载荷的条件下转动 10800s 时的 cGAN 生

成云图，图 5-7（b）为该条件下红外热成像仪测量的云图。由于图 5-7（a）中的色

度表示的范围和图 5-7（b）红外热成像仪色度表示的范围不一致，因此在视觉色彩

上存在一定的差异。在深度学习数据集中为了便于训练，将整个数据集的温度值域

作为色度的表示范围，而红外热成像仪和仿真后处理软件类似，将单个结果的温度

值域作为色度的表示范围。
30℃

15℃

（a)

（b)

图 5-7 虚拟监控系统云图实现效果与红外热成像仪测量云图。(a)cGAN 生成云图可 视化映射实现；(b)红外热成像仪测量云图

72

第五章 虚拟监控系统集成及测试
在室内温度 24.2℃，主轴转速 3000 转/分，在无载荷的条件下转动 3h 过程中， 上部覆盖件的 cGAN 生成温度云图和红外热成像仪测量云图的温度最大值随时间 变化的曲线如图 5-8 所示。实验测量和 cGAN 生成数据的最高温度为 28.1℃、 27.74℃，实验测量和 cGAN 生成的最高温度的绝对误差为 0.36℃，相对误差为 1.28%。实验测量数据和 cGAN 生成数据的最大温升为 3.9℃、3.59℃，实验测量和 cGAN 生成的温升的绝对误差为 0.31℃，相对误差为 7.95%。由于实验过程中存在 一定的影响实验结果的因素，尤其在初始阶段实际传热情况复杂，但二者误差较少， 可以认为实验数据和 cGAN 生成结果基本吻合，cGAN 结果与实验结果的误差在 工程上处于可以接受的范围。
图 5-8 cGAN 结果与实验结果的温升曲线
5.4 本章小结
本章首先进行了虚拟监控系统的集成，梳理了系统的开发环境，设计了系统的 运行流程，完成了虚拟监控系统的界面开发。然后进行了虚拟监控系统客户端的测 试，验证了虚拟监控系统的整体性能，计算机资源占用低，运行稳定可靠；验证了 虚拟监控系统优化后的显示性能，在复杂场景下能以较高的帧数运行。最后以 VMC0656e 五轴机床为对象，根据本文所提到的开发环境和网络架构进行了实验 环境的搭建，并对虚拟监控系统进行了测试和分析，验证了虚拟监控系统良好的显 示性能、功能完整性、可靠性。
73

电子科技大学硕士学位论文
第六章 总结与展望
6.1 总结
本文基于数字孪生对机床加工过程虚拟监控系统做了研究与实现，针对传统 监控系统在数据传输、可视化方面的不足，使用了异步的方式进行数据传输，并基 于 Unity3D 进行了可视化组件的设计与开发。针对现阶段几何层面的数字孪生，本 文拓展到了物理层面，对真实设备的物理规则也做了映射，研究了数字孪生物理规 则的融合，并基于此实现对机床的虚拟监控。本文的主要工作总结如下：
（1）基于多源异构数据的机床可视化监控技术设计与实现。设计了机床加工 过程多源异构数据的统一表达和集成算法；设计了基于缓存和消息队列的数据异 步传输方法，并实现了数据管理平台，相比传统方法读写性能提升 5.4 倍、吞吐量 提升 1.64 倍；基于 CLE 实现了 C#与 Python 的混合编程，设计了实时数据的处理 方法；基于 Unity3D 设计并实现了可视化组件，利用场景剔除技术优化了可视化监 控的显示性能。
（2）基于深度学习的机床数字孪生模型物理仿真研究。研究了数字孪生模型 物理规则融合的方法，基于仿真数据回归计算建模的方法对物理规则抽象，以及基 于深度学习对物理规则封装；根据多通道图像原理，设计了有限元仿真数据的图像 化处理方法，并基于 OpenCV 做了实现；基于 cGAN 模型进行回归建模，分析了 GAN 的数学原理，调整了 cGAN 的目标函数，并基于 TensorFlow 实现了 cGAN 模 型；对 VMC0656e 五轴机床数字孪生模型的主轴系统瞬态热力学规则融合做了实 现，相比有限元仿真方法在减少计算量时间和数据规模上的性能上有大幅度提高。
（3）虚拟监控系统的集成与测试。对虚拟监控系统进行集成，设计了系统运 行流程，完成系统了界面开发；对系统进行了测试，测试了整体性能和显示性能， 验证了系统良好的运行性能；以 VMC0656e 机床为对象进行了实例验证，验证了 虚拟监控系统满足设计需求。
6.2 展望
本文进行了基于数字孪生的机床加工过程的虚拟监控系统研究与实现，完全 实现数字孪生仍缺乏大量的研究工作，也需要多学科的共同努力。由于个人精力、 时间等方面的原因，对后续的工作进行展望：
（1）当前关于数字孪生的研究着重在设备的映射，对于制造过程，而实际中 涉及到加工设备和加工对象。从物理实体到数字虚体的映射应不仅局限于加工设
74

第六章 总结与展望
备，加工对象的映射也很关键，基于加工设备的数字孪生进而发展到加工对象，对 于加工质量、加工效率、经济性很有意义。
（2）本文中提到了数字孪生模型物理规则的融合方法，其中使用了基于仿真 数据的回归计算建模的抽象和基于深度学习模型的封装，方法可行却需要大量的 数据集和数据处理能力。因此，一方面对数据集提升，精简高效的数据集能提物理 规则高融合的效率；另一方面对数据处理效率的提升，高效的数据处理能加快物理 规则融合的应用进程。
75

电子科技大学硕士学位论文
致谢
三年时光里，在成电的点点滴滴，给我留下深刻印象的是教研室老师的耐心指 导和师兄师弟的帮助。每当我在科研的道路上遇到困惑，我的导师杜丽教授总是给 指点迷津，让我不再迷茫、彷徨，给我指出前进的方向。杜丽教授渊博的专业知识、 严谨的学术思维、踏实的科研态度、细致的工作态度，都让我收获颇丰。由衷的感 谢杜老师！
蒋劲茂老师作为我的副导师，在我的课题研究、论文写作、生活中，都给予了 悉心的帮助，帮我分析课题研究方向、指导科研中的技术问题。蒋老师经常与我交 流科研和生活，帮我解决各种难题，在此向蒋老师致以衷心的感谢！非常感谢教研 室丁杰雄教授、王伟教授、黄智副教授、吕强老师对我的课题的耐心指导，你们严 谨的学术思维、认真的科研态度、严格的学术要求让我对学术、科研有了更深刻理 解。
感谢何柳江师兄给我的巨大帮助，非常感谢何师兄！感谢李晴朝博士在科研和 生活中给予我的鼓励与帮助！感谢教研室的各位师兄师弟，三年时光中在学习、科 研、生活中提供的帮助，你们的鼓励与帮助让我铭记在心。最后，感谢父母为我的 默默付出，坚定我迈出的每一步。三年时光匆匆而过，作为一名即将离开成电的学 子，我将终身牢记“求实求真，大气大为”。
76

参考文献
参考文献
[1] 李清, 唐骞璘, 陈耀棠, 等. 智能制造体系架构、参考模型与标准化框架研究[J]. 计算机集 成制造系统, 2018, 24(3):539-549
[2] 吕 佑 龙 , 张 洁 . 基 于 大 数 据 的 智 慧 工 厂 技 术 框 架 [J]. 计 算 机 集 成 制 造 系 统 , 2016, 22(11):2691-2697
[3] 张存吉, 姚锡凡, 张翼翔, 周际锋, 易安斌. 从“数控一代”到“智慧一代”[J]. 计算机集成制 造系统, 2015, 21(07):1734-1743
[4] 周济. 智能制造—“中国制造 2025”的主攻方向[J]. 中国机械工程, 2015, 26(17):2273-2284 [5] 黄莹, 卢秉恒, 赵万华. 云计算在智能机床控制体系中的应用探析[J]. 机械工程学报, 2018,
54(08):210-216 [6] 中国信息物理系统发展论坛. 信息物理系统白皮书[R]. 北京:中国电子技术标准化研究院,
2017:5-11 [7] 黄莹, 卢秉恒, 赵万华. 云计算在智能机床控制体系中的应用探析[J]. 机械工程学报, 2018,
54(08):210-216 [8] GRIEVES M. Digital twin:manufacturing excellence through virtual factory replication[EB].
[2016-12-20] [9] Tuegel E. The airframe digital twin: some challenges to realization[C].53rd
AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics and Materials Conference 20th AIAA/ASME/AHS Adaptive Structures Conference 14th AIAA, 2012 [10] Warwick. Graham. GE advances analytical maintenance with digital twins[N]. Aviation Week and Space Technology, 2015-10-19 [11] Vachálek J, Bartalský L, Rovný O, et al. The digital twin of an industrial production line within the industry 4.0 concept[C]. 2017 21st International Conference on Process Control (PC), 2017:258-262 [12] 王春晓. 基于数字孪生的数控机床多领域建模与虚拟调试关键技术研究[D]. 山东大学, 2018 [13] 李宝超. 基于 Digital Twin 模型的 3C 非标检测设备精益优化设计研究[D]. 山东大学, 2018 [14] 王峻峰, 刘锐, 谢敏, 等. 现场实时数据驱动的翼身制孔过程三维可视化监视研究[J]. 航 空制造技术, 2018, 61(Z1):36-41 [15] ZHENG Y, YANG S, CHENG H. An application framework of digital twin and its case study [J]. Journal of Ambient Intelligence and Humanized Computing, 2019, 10(3):1141-53
77

电子科技大学硕士学位论文
[16] W. Luo, T. Hu, W. Zhu ,F. Tao. Digital twin modeling method for CNC machine tool[C], 2018 IEEE 15th International Conference on Networking, Sensing and Control (ICNSC), 2018:1-4
[17] 何柳江. 基于数字孪生的数控机床虚拟交互系统设计与实现[D]. 电子科技大学, 2019 [18] Eric J. Tuegel,Anthony R. Ingraffea,Thomas G,et al. Eason reengineering aircraft structural life
prediction using a digital twin[J]. International Journal of Aerospace Engineering, 2011, 8(2):114 [19] Michael Grieves,John Vickers. Transdisciplinary Perspectives on Complex Systems[M]. Berlin: Springer-Verlag, 2017 [20] Glaessgen E, Stargel D. The digital twin paradigm for future NASA and US Air Force vehicles[C]. 53rd Structures, Structural Dynamics and Materials Conference, 2012 [21] Arquimedes Canedo. Industrial IoT lifecycle via digital twins[C]. 2016 International Conference on Hardware/Software Codesign and System Synthesis (CODES+ISSS), 2016 [22] Thomas H. -J. Uhlemann, Christian Lehmann, Rolf Steinhilper. The digital twin: realizing the cyber-physical production system for industry 4.0[J]. Procedia CIRP, 2017, 61:335-340 [23] Cichon T, Roßmann J. Digital twins: assisting and supporting cooperation in human-robot teams[C]. 2018 15th International Conference on Control, Automation, Robotics and Vision (ICARCV), 2018:486-491 [24] Kostenko D, Kudryashov N, Maystrishin M, et al. Digital twin applications: diagnostics, optimisation and prediction[J]. Annals of DAAAM & Proceedings, 2018 [25] Janda P. Mechatronic concept of heavy machine tools[J]. Annals of DAAAM and Proceedings, 2018 [26] 陈为, 沈则潜, 陶煜波, 等. 数据可视化[M]. 北京:电子工业出版社, 2019:23-44 [27] 潘婷婷, 陈建平, 吴永亮, 等. 多源异构地质数据集成方法应用研究[J]. 地质学刊, 2018, 42(01):122-126 [28] Liang Hu, Zhenyu Liu, Jianrong Tan. A VR simulation framework integrated with multisource CAE analysis data for mechanical equipment working process[J]. Computers in Industry, 2018, 97:85-97 [29] 傅云. 复杂产品数字样机多性能耦合分析与仿真的若干关键技术研究及应用[D]. 浙江大 学, 2008 [30] 方锡武, 刘振宇, 谭建荣, 等. 异构有限元网格多场信息的等效集成方法[J]. 浙江大学学 报(工学版), 2014, 48(06):973-979 [31] 王琦. 面向结构试验的多源异构数据集成与分析系统设计[D]. 浙江大学, 2019
78

参考文献
[32] Yu H, Li S, Zhang T. Study on the organization and storage of remote sensing data oriented to visualization management[C]. Information Science and Cloud Computing, 2018
[33] Avazpour I, Grundy J, Zhu L. Engineering complex data integration, harmonization and visualization systems[J]. Journal of Industrial Information Integration, 2019, 16:100-103
[34] Jaenisch H M, Handley J W. Generalized information fusion and visualization using spatial voting and data modeling[C]. Multisensor, Multisource Information Fusion: Architectures, Algorithms, and Applications 2013. International Society for Optics and Photonics, 2013, 09:8752-8759
[35] Benjamin P, Madanagopal K, Wu C, et al. Collaborative information analysis & visualization for knowledge discovery[C]. Proceedings on the International Conference on Artificial Intelligence (ICAI). The Steering Committee of The World Congress in Computer Science, Computer Engineering and Applied Computing (WorldComp), 2014
[36] Parfenova I A, Ismailova L Y, Kosikov S V, et al. Multi-model visualization based on integration of data models in semantic network environment[J]. Procedia computer science, 2018, 145:406411
[37] Bezgodov A, Karsakov A, Zagarskikh A, et al. The framework for rapid graphics application development: the multi-scale problem visualization[J]. Procedia Computer Science, 2015, 51:2729-2733
[38] 邓小雷. 数控机床主轴系统多物理场耦合热态特性分析研究[D]. 浙江大学, 2014 [39] 毛宽民, 叶俊, 李斌. 基于 PATRAN 的机床结构快速动力学建模系统的开发[J]. 中国机械
工程, 2008, 19(10):1144-1148 [40] Xiao L, Zhang X, Kuang Z, et al. Auto-FCD: efficiently parallelizing CFD applications on
clusters[C]. 2003 Proceedings IEEE International Conference on Cluster Computing. IEEE, 2003, 4(1):46-53 [41] Lei J, Li D, Zhou Y, et al. Optimization and acceleration of flow simulations for CFD on CPU/GPU architecture[J]. Journal of the Brazilian Society of Mechanical Sciences and Engineering, 2019, 41(7):290-295 [42] Jin Huang,Jiong Chen,Weiwei Xu,Hujun Bao. A survey on fast simulation of elastic objects[J]. Frontiers of Computer Science,2019, 13(3):443-459 [43] 姚叶. 基于深度学习的流场数据后处理方法的研究[D]. 北京邮电大学, 2018 [44] Raza N, Mehmood I, Rafiuddin H, et al. Numerical simulation of added mass determination of standard ellipsoids[C]. Proceedings of 2012 9th International Bhurban Conference on Applied Sciences & Technology (IBCAST), 2012:270-273
79

电子科技大学硕士学位论文
[45] Brandvik T, Pullan G. Acceleration of a 3D Euler solver using commodity graphics hardware[C]. 46th AIAA aerospace sciences meeting and exhibit, 2008, 22(7):443-456
[46] Thibault J C, Senocak I. Accelerating incompressible flow computations with a Pthreads-CUDA implementation on small-footprint multi-GPU platforms[J]. The Journal of Supercomputing, 2012, 59(2):693-719
[47] Smith W D, Schnore A R. Towards an RCC-based accelerator for computational fluid dynamics applications[J]. The journal of Supercomputing, 2004, 30(3):239-261
[48] Morisita H, Inakagata K, Osana Y, et al. Implementation and evaluation of an arithmetic pipeline on FLOPS-2D: multi-FPGA system[J]. ACM SIGARCH Computer Architecture News, 2010, 38(4):8-13
[49] Sanchez-Roman D, Sutter G, Lopez-Buedo S, et al. High-level languages and floating-point arithmetic for FPGA-based CFD simulations[J]. IEEE Design & Test of Computers, 2011, 28(4):28-37
[50] Mahnke W, Leitner S H, Damm M. OPC unified architecture[M]. Springer Science & Business Media, 2009:26-23
[51] 李旭东. 虚拟工厂大规模场景的运动仿真关键技术与应用研究[D]. 电子科技大学, 2018 [52] Hornik Kurt, Maxwell Stinchcombe, Halbert White. Multilayer feedforward networks are
universal approximators[J]. Neural networks, 1989, 2(5):359-366 [53] Hinton G E, Salakhutdinov R R. Reducing the dimensionality of data with neural networks[J].
science, 2006, 313(5786):504-507 [54] Goodfellow I, Pouget-Abadie J, Mirza M, et al. Generative adversarial nets[C].Advances in
neural information processing systems, 2014,3(6):2672-2680 [55] 李航. 统计学习方法[M]. 清华大学出版社, 2012 [56] Mirza M, Osindero S. Conditional generative adversarial nets[J]. arXiv preprint arXiv:1411.1784,
2014 [57] Pathak D, Krahenbuhl P, Donahue J, et al. Context encoders: Feature learning by
inpainting[C].Proceedings of the IEEE conference on computer vision and pattern recognition, 2016:2536-2544. [58] Isola P, Zhu J Y, Zhou T, et al. Image-to-image translation with conditional adversarial networks[C].Proceedings of the IEEE conference on computer vision and pattern recognition, 2017:1125-1134
80

攻读硕士期间取得的成果
攻读硕士期间取得的成果
硕士期间参与的科研项目
1. 国家科技重大专项课题“用于钛合金壁板、复合材料等典型零件加工的高速立式五轴数控 机床研制及自动化生产线示范应用”，编号 2017ZX04002001。
81

